{"version":3,"sources":["../node_modules/react-query/es/core/types.js","../node_modules/react-query/es/core/utils.js","../node_modules/react-query/es/core/config.js","../node_modules/react-query/es/core/notifyManager.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/core/query.js","../node_modules/react-query/es/core/queryCache.js","../node_modules/react-query/es/core/setFocusHandler.js","../node_modules/react-query/es/core/setOnlineHandler.js","../node_modules/react-query/es/react/reactBatchedUpdates.js","../node_modules/react-query/es/react/ReactQueryCacheProvider.js","../node_modules/react-query/es/react/ReactQueryConfigProvider.js","../node_modules/react-query/es/react/ReactQueryErrorResetBoundary.js","../node_modules/react-query/es/react/utils.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/react/useQuery.js","../node_modules/react-query/es/index.js"],"names":["QueryStatus","CancelledError","silent","this","isServer","window","noop","Console","console","error","warn","log","functionalUpdate","updater","input","stableStringifyReplacer","_key","value","Error","isPlainObject","Object","keys","sort","reduce","result","key","isValidTimeout","Infinity","isDocumentVisible","document","undefined","includes","visibilityState","isOnline","navigator","onLine","getQueryArgs","arg1","arg2","arg3","arg4","queryKey","queryFn","config","options","_extends","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","toString","call","isCancelledError","getStatusProps","status","isLoading","Loading","isSuccess","Success","isError","isIdle","Idle","createSetHandler","fn","removePreviousHandler","callback","scheduleMicrotask","Promise","resolve","then","catch","setTimeout","batchedUpdates","DEFAULT_CONFIG","queries","cacheTime","enabled","notifyOnStatusChange","reject","queryKeySerializerFn","arrayQueryKey","Array","isArray","queryHash","JSON","stringify","parse","_unused","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","retry","retryDelay","attemptIndex","Math","min","pow","staleTime","structuralSharing","getResolvedQueryConfig","queryCache","contextConfig","queryCacheConfig","getDefaultConfig","resolvedConfig","shared","notifyManager","NotifyManager","queue","transactions","_proto","batch","flush","schedule","notify","push","length","forEach","QueryObserver","isStale","initialUpdateCount","remove","bind","refetch","fetchMore","unsubscribe","updateQuery","subscribe","listener","currentQuery","subscribeObserver","forceFetchOnMount","fetch","optionalFetch","updateTimers","clearTimers","unsubscribeObserver","updateConfig","prevConfig","prevQuery","Boolean","isResolvedQueryConfig","updateStaleTimeout","refetchInterval","updateRefetchInterval","getCurrentQuery","getCurrentResult","currentResult","clear","fetchMoreVariable","_DEFAULT_CONFIG$queri","data","suspense","isFetched","observers","_this","clearStaleTimeout","timeElapsed","Date","now","updatedAt","timeUntilStale","timeout","max","staleTimeoutId","updateResult","globalListeners","_this2","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","clearInterval","_this$previousQueryRe","state","isPreviousData","keepPreviousData","isInitialData","previousQueryResult","canFetchMore","failureCount","updateCount","isFetchedAfterMount","isFetching","isFetchingMore","query","getQueryByHash","createQuery","initialStale","isStaleByTime","onQueryUpdate","action","type","prevResult","notifyOptions","onSuccess","onError","onSettled","notifyGlobalListeners","_empty","ActionType","_awaitIgnored","direct","_invoke","body","_await","_catch","recover","e","_async","f","args","i","arguments","apply","Query","initialData","hasMorePages","isInvalidated","getDefaultState","scheduleGc","dispatch","_action$updatedAt","throwInErrorBoundary","queryReducer","observer","clearGcTimeout","gcTimeout","cancel","promise","cancelFetch","continue","_this$continueFetch","continueFetch","clearTimersObservers","clearTimeout","setData","_this$config$isDataEq","_this$config","prevData","replaceEqualDeep","a","b","array","aSize","bItems","bSize","copy","equalItems","isDataEqual","removeQuery","destroy","isActive","some","onInteraction","staleObserver","find","filter","x","isTransportCancelable","invalidate","throwOnError","previous","_exit2","_this4","_result2","queryFnParamsFilter","params","infinite","startInfiniteFetch","_this4$startInfiniteF","startFetch","_this4$startFetch","_options","tryFetchData","_ref","prevPages","fetchPage","pages","prepend","cursor","lastPage","getLastPage","getFetchMore","concat","page","_this5","outerResolve","outerReject","continueLoop","cancelTransport","resolved","done","run","promiseOrValue","_promiseOrValue","continueResolve","QueryCache","queriesArray","getQueries","acc","q","defaultConfig","_getResolvedQueryConfig","removeQueries","predicate","predicateFn","anyKey","exact","active","stale","deepIncludes","getQuery","getQueryData","_this$getQuery","_this3","cancelQueries","invalidateQueries","_ref2","_ref2$refetchActive","refetchActive","_ref2$refetchInactive","refetchInactive","refetchOptions","refetchQueries","promises","all","resetErrorBoundaries","buildQuery","frozen","fetchQuery","_getQueryArgs","prefetchQuery","_getQueryArgs2","force","watchQuery","_getQueryArgs3","setQueryData","defaultQueryCache","queryCaches","onVisibilityOrOnlineChange","setFocusHandler","handleFocus","_window","addEventListener","removeEventListener","setOnlineHandler","handleOnline","unstable_batchedUpdates","ReactDOM","queryCacheContext","React","createContext","useQueryCache","useContext","configContext","useContextConfig","createValue","_isReset","clearReset","reset","isReset","context","useIsMounted","mountedRef","useRef","isMounted","useCallback","current","useBaseQuery","rerender","useReducer","c","cache","errorResetBoundary","observerRef","firstRender","useEffect","useErrorBoundary","finally","useQuery"],"mappings":"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","file":"static/js/0.50f97649.chunk.js","sourcesContent":["export var QueryStatus;\n\n(function (QueryStatus) {\n  QueryStatus[\"Idle\"] = \"idle\";\n  QueryStatus[\"Loading\"] = \"loading\";\n  QueryStatus[\"Error\"] = \"error\";\n  QueryStatus[\"Success\"] = \"success\";\n})(QueryStatus || (QueryStatus = {}));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { QueryStatus } from './types'; // TYPES\n\nexport var CancelledError = function CancelledError(silent) {\n  this.silent = silent;\n}; // UTILS\n\nvar _uid = 0;\nexport function uid() {\n  return _uid++;\n}\nexport var isServer = typeof window === 'undefined';\nexport function noop() {\n  return undefined;\n}\nexport var Console = console || {\n  error: noop,\n  warn: noop,\n  log: noop\n};\nexport function setConsole(c) {\n  Console = c;\n}\nexport function functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\n\nfunction stableStringifyReplacer(_key, value) {\n  if (typeof value === 'function') {\n    throw new Error();\n  }\n\n  if (isPlainObject(value)) {\n    return Object.keys(value).sort().reduce(function (result, key) {\n      result[key] = value[key];\n      return result;\n    }, {});\n  }\n\n  return value;\n}\n\nexport function stableStringify(value) {\n  return JSON.stringify(value, stableStringifyReplacer);\n}\nexport function deepIncludes(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (typeof a === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !deepIncludes(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\nexport function isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function isDocumentVisible() {\n  // document global can be unavailable in react native\n  if (typeof document === 'undefined') {\n    return true;\n  }\n\n  return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n}\nexport function isOnline() {\n  return navigator.onLine === undefined || navigator.onLine;\n}\nexport function getQueryArgs(arg1, arg2, arg3, arg4) {\n  var queryKey;\n  var queryFn;\n  var config;\n  var options;\n\n  if (isPlainObject(arg1)) {\n    queryKey = arg1.queryKey;\n    queryFn = arg1.queryFn;\n    config = arg1.config;\n    options = arg2;\n  } else if (isPlainObject(arg2)) {\n    queryKey = arg1;\n    config = arg2;\n    options = arg3;\n  } else {\n    queryKey = arg1;\n    queryFn = arg2;\n    config = arg3;\n    options = arg4;\n  }\n\n  config = config || {};\n\n  if (queryFn) {\n    config = _extends({}, config, {\n      queryFn: queryFn\n    });\n  }\n\n  return [queryKey, config, options];\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nexport function replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nexport function isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nexport function isError(value) {\n  return value instanceof Error;\n}\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nexport function sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\nexport function getStatusProps(status) {\n  return {\n    status: status,\n    isLoading: status === QueryStatus.Loading,\n    isSuccess: status === QueryStatus.Success,\n    isError: status === QueryStatus.Error,\n    isIdle: status === QueryStatus.Idle\n  };\n}\nexport function createSetHandler(fn) {\n  var removePreviousHandler;\n  return function (callback) {\n    // Unsub the old handler\n    if (removePreviousHandler) {\n      removePreviousHandler();\n    } // Sub the new handler\n\n\n    removePreviousHandler = callback(fn);\n  };\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nexport function scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}\n\n// Default to a dummy \"batch\" implementation that just runs the callback\nvar batchedUpdates = function batchedUpdates(callback) {\n  callback();\n}; // Allow injecting another batching function later\n\n\nexport function setBatchedUpdates(fn) {\n  batchedUpdates = fn;\n} // Supply a getter just to skip dealing with ESM bindings\n\nexport function getBatchedUpdates() {\n  return batchedUpdates;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { stableStringify } from './utils';\n// CONFIG\nexport var defaultQueryKeySerializerFn = function defaultQueryKeySerializerFn(queryKey) {\n  try {\n    var arrayQueryKey = Array.isArray(queryKey) ? queryKey : [queryKey];\n    var queryHash = stableStringify(arrayQueryKey);\n    arrayQueryKey = JSON.parse(queryHash);\n    return [queryHash, arrayQueryKey];\n  } catch (_unused) {\n    throw new Error('A valid query key is required!');\n  }\n};\n/**\n * Config merging strategy\n *\n * When using hooks the config will be merged in the following order:\n *\n * 1. These defaults.\n * 2. Defaults from the hook query cache.\n * 3. Combined defaults from any config providers in the tree.\n * 4. Query/mutation config provided to the hook.\n *\n * When using a query cache directly the config will be merged in the following order:\n *\n * 1. These defaults.\n * 2. Defaults from the query cache.\n * 3. Query/mutation config provided to the query cache method.\n */\n\nexport var DEFAULT_CONFIG = {\n  queries: {\n    cacheTime: 5 * 60 * 1000,\n    enabled: true,\n    notifyOnStatusChange: true,\n    queryFn: function queryFn() {\n      return Promise.reject();\n    },\n    queryKeySerializerFn: defaultQueryKeySerializerFn,\n    refetchOnMount: true,\n    refetchOnReconnect: true,\n    refetchOnWindowFocus: true,\n    retry: 3,\n    retryDelay: function retryDelay(attemptIndex) {\n      return Math.min(1000 * Math.pow(2, attemptIndex), 30000);\n    },\n    staleTime: 0,\n    structuralSharing: true\n  }\n};\nexport function getDefaultReactQueryConfig() {\n  return {\n    queries: _extends({}, DEFAULT_CONFIG.queries),\n    mutations: _extends({}, DEFAULT_CONFIG.mutations)\n  };\n}\nexport function mergeReactQueryConfigs(a, b) {\n  return {\n    shared: _extends({}, a.shared, b.shared),\n    queries: _extends({}, a.queries, b.queries),\n    mutations: _extends({}, a.mutations, b.mutations)\n  };\n}\nexport function getResolvedQueryConfig(queryCache, queryKey, contextConfig, config) {\n  var queryCacheConfig = queryCache.getDefaultConfig();\n\n  var resolvedConfig = _extends({}, DEFAULT_CONFIG.queries, queryCacheConfig == null ? void 0 : queryCacheConfig.shared, queryCacheConfig == null ? void 0 : queryCacheConfig.queries, contextConfig == null ? void 0 : contextConfig.shared, contextConfig == null ? void 0 : contextConfig.queries, config);\n\n  var result = resolvedConfig.queryKeySerializerFn(queryKey);\n  resolvedConfig.queryCache = queryCache;\n  resolvedConfig.queryHash = result[0];\n  resolvedConfig.queryKey = result[1];\n  return resolvedConfig;\n}\nexport function isResolvedQueryConfig(config) {\n  return Boolean(config.queryHash);\n}\nexport function getResolvedMutationConfig(queryCache, contextConfig, config) {\n  var queryCacheConfig = queryCache.getDefaultConfig();\n  return _extends({}, DEFAULT_CONFIG.mutations, queryCacheConfig == null ? void 0 : queryCacheConfig.shared, queryCacheConfig == null ? void 0 : queryCacheConfig.mutations, contextConfig == null ? void 0 : contextConfig.shared, contextConfig == null ? void 0 : contextConfig.mutations, config);\n}","import { getBatchedUpdates, scheduleMicrotask } from './utils'; // TYPES\n\n// CLASS\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    this.transactions++;\n    var result = callback();\n    this.transactions--;\n\n    if (!this.transactions) {\n      this.flush();\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(notify) {\n    if (this.transactions) {\n      this.queue.push(notify);\n    } else {\n      scheduleMicrotask(function () {\n        notify();\n      });\n    }\n  };\n\n  _proto.flush = function flush() {\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        var batchedUpdates = getBatchedUpdates();\n        batchedUpdates(function () {\n          queue.forEach(function (notify) {\n            notify();\n          });\n        });\n      });\n    }\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getStatusProps, isDocumentVisible, isServer, isValidTimeout, noop } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { DEFAULT_CONFIG, isResolvedQueryConfig } from './config';\nexport var QueryObserver = /*#__PURE__*/function () {\n  function QueryObserver(config) {\n    this.config = config;\n    this.isStale = true;\n    this.initialUpdateCount = 0; // Bind exposed methods\n\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n    this.fetchMore = this.fetchMore.bind(this);\n    this.unsubscribe = this.unsubscribe.bind(this); // Subscribe to the query\n\n    this.updateQuery();\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.subscribe = function subscribe(listener) {\n    this.listener = listener || noop;\n    this.currentQuery.subscribeObserver(this);\n\n    if (this.config.enabled && (this.config.forceFetchOnMount || this.config.refetchOnMount === 'always')) {\n      this.fetch();\n    } else {\n      this.optionalFetch();\n    }\n\n    this.updateTimers();\n    return this.unsubscribe;\n  };\n\n  _proto.unsubscribe = function unsubscribe() {\n    this.listener = undefined;\n    this.clearTimers();\n    this.currentQuery.unsubscribeObserver(this);\n  };\n\n  _proto.updateConfig = function updateConfig(config) {\n    var prevConfig = this.config;\n    var prevQuery = this.currentQuery;\n    this.config = isResolvedQueryConfig(config) ? config : this.config.queryCache.getResolvedQueryConfig(this.config.queryKey, config);\n    this.updateQuery(); // Take no further actions if there is no subscriber\n\n    if (!this.listener) {\n      return;\n    } // If we subscribed to a new query, optionally fetch and update refetch\n\n\n    if (this.currentQuery !== prevQuery) {\n      this.optionalFetch();\n      this.updateTimers();\n      return;\n    } // Optionally fetch if the query became enabled\n\n\n    if (config.enabled && !prevConfig.enabled) {\n      this.optionalFetch();\n    } // Update stale interval if needed\n\n\n    if (config.enabled !== prevConfig.enabled || config.staleTime !== prevConfig.staleTime) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (config.enabled !== prevConfig.enabled || config.refetchInterval !== prevConfig.refetchInterval) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  }\n  /**\n   * @deprecated\n   */\n  ;\n\n  _proto.clear = function clear() {\n    this.remove();\n  };\n\n  _proto.remove = function remove() {\n    this.currentQuery.remove();\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.currentQuery.refetch(options, this.config);\n  };\n\n  _proto.fetchMore = function fetchMore(fetchMoreVariable, options) {\n    return this.currentQuery.fetchMore(fetchMoreVariable, options, this.config).catch(noop);\n  };\n\n  _proto.fetch = function fetch() {\n    var _DEFAULT_CONFIG$queri;\n\n    // Never try to fetch if no query function has been set\n    if (this.config.queryFn === ((_DEFAULT_CONFIG$queri = DEFAULT_CONFIG.queries) == null ? void 0 : _DEFAULT_CONFIG$queri.queryFn)) {\n      return Promise.resolve(this.currentResult.data);\n    }\n\n    return this.currentQuery.fetch(undefined, this.config).catch(noop);\n  };\n\n  _proto.optionalFetch = function optionalFetch() {\n    if (this.config.enabled && // Only fetch if enabled\n    this.isStale && // Only fetch if stale\n    !(this.config.suspense && this.currentResult.isFetched) && ( // Don't refetch if in suspense mode and the data is already fetched\n    this.config.refetchOnMount || this.currentQuery.observers.length === 1)) {\n      this.fetch();\n    }\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this = this;\n\n    if (isServer) {\n      return;\n    }\n\n    this.clearStaleTimeout();\n\n    if (this.isStale || !isValidTimeout(this.config.staleTime)) {\n      return;\n    }\n\n    var timeElapsed = Date.now() - this.currentResult.updatedAt;\n    var timeUntilStale = this.config.staleTime - timeElapsed + 1;\n    var timeout = Math.max(timeUntilStale, 0);\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this.isStale) {\n        _this.isStale = true;\n\n        _this.updateResult();\n\n        _this.notify({\n          listener: true,\n          globalListeners: true\n        });\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this2 = this;\n\n    if (isServer) {\n      return;\n    }\n\n    this.clearRefetchInterval();\n\n    if (!this.config.enabled || !isValidTimeout(this.config.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this2.config.refetchIntervalInBackground || isDocumentVisible()) {\n        _this2.fetch();\n      }\n    }, this.config.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearInterval(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  };\n\n  _proto.updateResult = function updateResult() {\n    var _this$previousQueryRe;\n\n    var state = this.currentQuery.state;\n    var data = state.data,\n        status = state.status,\n        updatedAt = state.updatedAt;\n    var isPreviousData = false; // Keep previous data if needed\n\n    if (this.config.keepPreviousData && state.isInitialData && ((_this$previousQueryRe = this.previousQueryResult) == null ? void 0 : _this$previousQueryRe.isSuccess)) {\n      data = this.previousQueryResult.data;\n      updatedAt = this.previousQueryResult.updatedAt;\n      status = this.previousQueryResult.status;\n      isPreviousData = true;\n    }\n\n    this.currentResult = _extends({}, getStatusProps(status), {\n      canFetchMore: state.canFetchMore,\n      clear: this.remove,\n      data: data,\n      error: state.error,\n      failureCount: state.failureCount,\n      fetchMore: this.fetchMore,\n      isFetched: state.updateCount > 0,\n      isFetchedAfterMount: state.updateCount > this.initialUpdateCount,\n      isFetching: state.isFetching,\n      isFetchingMore: state.isFetchingMore,\n      isInitialData: state.isInitialData,\n      isPreviousData: isPreviousData,\n      isStale: this.isStale,\n      refetch: this.refetch,\n      remove: this.remove,\n      updatedAt: updatedAt\n    });\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var config = this.config;\n    var prevQuery = this.currentQuery;\n    var query = config.queryCache.getQueryByHash(config.queryHash);\n\n    if (!query) {\n      query = config.queryCache.createQuery(config);\n    }\n\n    if (query === prevQuery) {\n      return;\n    }\n\n    this.previousQueryResult = this.currentResult;\n    this.currentQuery = query;\n    this.initialUpdateCount = query.state.updateCount; // Update stale state on query switch\n\n    if (query.state.isInitialData) {\n      if (config.keepPreviousData && prevQuery) {\n        this.isStale = true;\n      } else if (typeof config.initialStale === 'function') {\n        this.isStale = config.initialStale();\n      } else if (typeof config.initialStale === 'boolean') {\n        this.isStale = config.initialStale;\n      } else {\n        this.isStale = typeof query.state.data === 'undefined';\n      }\n    } else {\n      this.isStale = query.isStaleByTime(config.staleTime);\n    }\n\n    this.updateResult();\n\n    if (this.listener) {\n      prevQuery == null ? void 0 : prevQuery.unsubscribeObserver(this);\n      this.currentQuery.subscribeObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var config = this.config;\n    var type = action.type; // Update stale state on success, error or invalidation\n\n    if (type === 2 || type === 3 || type === 4) {\n      this.isStale = this.currentQuery.isStaleByTime(config.staleTime);\n    } // Store current result and get new result\n\n\n    var prevResult = this.currentResult;\n    this.updateResult();\n    var currentResult = this.currentResult; // Update timers on success, error or invalidation\n\n    if (type === 2 || type === 3 || type === 4) {\n      this.updateTimers();\n    } // Do not notify if the query was invalidated but the stale state did not changed\n\n\n    if (type === 4 && currentResult.isStale === prevResult.isStale) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var notifyOptions = {};\n\n    if (type === 2) {\n      notifyOptions.onSuccess = true;\n    } else if (type === 3) {\n      notifyOptions.onError = true;\n    }\n\n    if ( // Always notify if notifyOnStatusChange is set\n    config.notifyOnStatusChange || // Otherwise only notify on data or error change\n    currentResult.data !== prevResult.data || currentResult.error !== prevResult.error) {\n      notifyOptions.listener = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.notify = function notify(options) {\n    var config = this.config,\n        currentResult = this.currentResult,\n        currentQuery = this.currentQuery,\n        listener = this.listener;\n    var onSuccess = config.onSuccess,\n        onSettled = config.onSettled,\n        onError = config.onError;\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (options.onSuccess) {\n        if (onSuccess) {\n          notifyManager.schedule(function () {\n            onSuccess(currentResult.data);\n          });\n        }\n\n        if (onSettled) {\n          notifyManager.schedule(function () {\n            onSettled(currentResult.data, null);\n          });\n        }\n      } else if (options.onError) {\n        if (onError) {\n          notifyManager.schedule(function () {\n            onError(currentResult.error);\n          });\n        }\n\n        if (onSettled) {\n          notifyManager.schedule(function () {\n            onSettled(undefined, currentResult.error);\n          });\n        }\n      } // Then trigger the listener\n\n\n      if (options.listener && listener) {\n        notifyManager.schedule(function () {\n          listener(currentResult);\n        });\n      } // Then the global listeners\n\n\n      if (options.globalListeners) {\n        config.queryCache.notifyGlobalListeners(currentQuery);\n      }\n    });\n  };\n\n  return QueryObserver;\n}();","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { CancelledError, Console, functionalUpdate, isCancelable, isCancelledError, isDocumentVisible, isOnline, isServer, isValidTimeout, noop, replaceEqualDeep, sleep } from './utils';\nimport { QueryStatus } from './types';\nimport { QueryObserver } from './queryObserver';\nimport { notifyManager } from './notifyManager'; // TYPES\n\nfunction _empty() {}\n\nvar ActionType = {\n  Failed: 0,\n  Fetch: 1,\n  Success: 2,\n  Error: 3,\n  Invalidate: 4\n};\n\n// CLASS\nfunction _awaitIgnored(value, direct) {\n  if (!direct) {\n    return value && value.then ? value.then(_empty) : Promise.resolve();\n  }\n}\n\nfunction _invoke(body, then) {\n  var result = body();\n\n  if (result && result.then) {\n    return result.then(then);\n  }\n\n  return then(result);\n}\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n\n  return result;\n}\n\nfunction _async(f) {\n  return function () {\n    for (var args = [], i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    try {\n      return Promise.resolve(f.apply(this, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport var Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.config = config;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.queryCache = config.queryCache;\n    this.cacheTime = config.cacheTime;\n    this.observers = [];\n    this.state = getDefaultState(config);\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.updateConfig = function updateConfig(config) {\n    this.config = config;\n    this.cacheTime = Math.max(this.cacheTime, config.cacheTime);\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this = this;\n\n    this.state = queryReducer(this.state, action);\n    notifyManager.batch(function () {\n      _this.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this.queryCache.notifyGlobalListeners(_this);\n    });\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this2 = this;\n\n    if (isServer) {\n      return;\n    }\n\n    this.clearGcTimeout();\n\n    if (this.observers.length > 0 || !isValidTimeout(this.cacheTime)) {\n      return;\n    }\n\n    this.gcTimeout = setTimeout(function () {\n      _this2.remove();\n    }, this.cacheTime);\n  };\n\n  _proto.cancel = function cancel(silent) {\n    var promise = this.promise;\n\n    if (promise && this.cancelFetch) {\n      this.cancelFetch(silent);\n      return promise.then(noop).catch(noop);\n    }\n\n    return Promise.resolve(undefined);\n  };\n\n  _proto.continue = function _continue() {\n    var _this$continueFetch;\n\n    (_this$continueFetch = this.continueFetch) == null ? void 0 : _this$continueFetch.call(this);\n  };\n\n  _proto.clearTimersObservers = function clearTimersObservers() {\n    this.observers.forEach(function (observer) {\n      observer.clearTimers();\n    });\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$config$isDataEq, _this$config;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = functionalUpdate(updater, prevData); // Structurally share data between prev and new data if needed\n\n    if (this.config.structuralSharing) {\n      data = replaceEqualDeep(prevData, data);\n    } // Use prev data if an isDataEqual function is defined and returns `true`\n\n\n    if ((_this$config$isDataEq = (_this$config = this.config).isDataEqual) == null ? void 0 : _this$config$isDataEq.call(_this$config, prevData, data)) {\n      data = prevData;\n    } // Try to determine if more data can be fetched\n\n\n    var canFetchMore = hasMorePages(this.config, data); // Set data and mark it as cached\n\n    this.dispatch({\n      type: ActionType.Success,\n      data: data,\n      canFetchMore: canFetchMore,\n      updatedAt: options == null ? void 0 : options.updatedAt\n    });\n  }\n  /**\n   * @deprecated\n   */\n  ;\n\n  _proto.clear = function clear() {\n    Console.warn('react-query: clear() has been deprecated, please use remove() instead');\n    this.remove();\n  };\n\n  _proto.remove = function remove() {\n    this.queryCache.removeQuery(this);\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.clearTimersObservers();\n    this.cancel();\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.config.enabled;\n    });\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || this.state.status !== QueryStatus.Success || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || this.state.status !== QueryStatus.Success || this.state.updatedAt + staleTime <= Date.now();\n  };\n\n  _proto.onInteraction = function onInteraction(type) {\n    // Execute the first observer which is enabled,\n    // stale and wants to refetch on this interaction.\n    var staleObserver = this.observers.find(function (observer) {\n      var config = observer.config;\n\n      var _observer$getCurrentR = observer.getCurrentResult(),\n          isStale = _observer$getCurrentR.isStale;\n\n      return config.enabled && (type === 'focus' && (config.refetchOnWindowFocus === 'always' || config.refetchOnWindowFocus && isStale) || type === 'online' && (config.refetchOnReconnect === 'always' || config.refetchOnReconnect && isStale));\n    });\n\n    if (staleObserver) {\n      staleObserver.fetch();\n    } // Continue any paused fetch\n\n\n    this.continue();\n  }\n  /**\n   * @deprectated\n   */\n  ;\n\n  _proto.subscribe = function subscribe(listener) {\n    var observer = new QueryObserver(this.config);\n    observer.subscribe(listener);\n    return observer;\n  };\n\n  _proto.subscribeObserver = function subscribeObserver(observer) {\n    this.observers.push(observer); // Stop the query from being garbage collected\n\n    this.clearGcTimeout();\n  };\n\n  _proto.unsubscribeObserver = function unsubscribeObserver(observer) {\n    this.observers = this.observers.filter(function (x) {\n      return x !== observer;\n    });\n\n    if (!this.observers.length) {\n      // If the transport layer does not support cancellation\n      // we'll let the query continue so the result can be cached\n      if (this.isTransportCancelable) {\n        this.cancel();\n      }\n\n      this.scheduleGc();\n    }\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: ActionType.Invalidate\n      });\n    }\n  }\n  /**\n   * @deprectated\n   */\n  ;\n\n  _proto.refetch = function refetch(options, config) {\n    var promise = this.fetch(undefined, config);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n  /**\n   * @deprectated\n   */\n  ;\n\n  _proto.fetchMore = function fetchMore(fetchMoreVariable, options, config) {\n    return this.fetch({\n      fetchMore: {\n        fetchMoreVariable: fetchMoreVariable,\n        previous: (options == null ? void 0 : options.previous) || false\n      }\n    }, config);\n  };\n\n  _proto.fetch = function fetch(options, config) {\n    try {\n      var _exit2 = false;\n\n      var _this4 = this;\n\n      return _invoke(function () {\n        if (_this4.promise) {\n          return function () {\n            if ((options == null ? void 0 : options.fetchMore) && _this4.state.data) {\n              // Silently cancel current fetch if the user wants to fetch more\n              return _awaitIgnored(_this4.cancel(true));\n            } else {\n              // Return current promise if we are already fetching\n              _exit2 = true;\n              return _this4.promise;\n            }\n          }();\n        }\n      }, function (_result2) {\n        if (_exit2) return _result2;\n\n        // Update config if passed, otherwise the config from the last execution is used\n        if (config) {\n          _this4.updateConfig(config);\n        }\n\n        config = _this4.config; // Get the query function params\n\n        var filter = config.queryFnParamsFilter;\n        var params = filter ? filter(_this4.queryKey) : _this4.queryKey;\n        _this4.promise = _async(function () {\n          return _catch(function () {\n            var data;\n            return _invoke(function () {\n              if (config.infinite) {\n                return _await(_this4.startInfiniteFetch(config, params, options), function (_this4$startInfiniteF) {\n                  data = _this4$startInfiniteF;\n                });\n              } else {\n                return _await(_this4.startFetch(config, params, options), function (_this4$startFetch) {\n                  data = _this4$startFetch;\n                });\n              }\n            }, function () {\n              // Set success state\n              _this4.setData(data); // Cleanup\n\n\n              delete _this4.promise; // Return data\n\n              return data;\n            });\n          }, function (error) {\n            // Set error state if needed\n            if (!(isCancelledError(error) && error.silent)) {\n              _this4.dispatch({\n                type: ActionType.Error,\n                error: error\n              });\n            } // Log error\n\n\n            if (!isCancelledError(error)) {\n              Console.error(error);\n            } // Cleanup\n\n\n            delete _this4.promise; // Propagate error\n\n            throw error;\n          });\n        })();\n        return _this4.promise;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.startFetch = function startFetch(config, params, _options) {\n    // Create function to fetch the data\n    var fetchData = function fetchData() {\n      return config.queryFn.apply(config, params);\n    }; // Set to fetching state if not already in it\n\n\n    if (!this.state.isFetching) {\n      this.dispatch({\n        type: ActionType.Fetch\n      });\n    } // Try to fetch the data\n\n\n    return this.tryFetchData(config, fetchData);\n  };\n\n  _proto.startInfiniteFetch = function startInfiniteFetch(config, params, options) {\n    var fetchMore = options == null ? void 0 : options.fetchMore;\n\n    var _ref = fetchMore || {},\n        previous = _ref.previous,\n        fetchMoreVariable = _ref.fetchMoreVariable;\n\n    var isFetchingMore = fetchMore ? previous ? 'previous' : 'next' : false;\n    var prevPages = this.state.data || []; // Create function to fetch a page\n\n    var fetchPage = _async(function (pages, prepend, cursor) {\n      var lastPage = getLastPage(pages, prepend);\n\n      if (typeof cursor === 'undefined' && typeof lastPage !== 'undefined' && config.getFetchMore) {\n        cursor = config.getFetchMore(lastPage, pages);\n      }\n\n      return _await(config.queryFn.apply(config, params.concat([cursor])), function (page) {\n        return prepend ? [page].concat(pages) : [].concat(pages, [page]);\n      });\n    }); // Create function to fetch the data\n\n\n    var fetchData = function fetchData() {\n      if (isFetchingMore) {\n        return fetchPage(prevPages, previous, fetchMoreVariable);\n      } else if (!prevPages.length) {\n        return fetchPage([]);\n      } else {\n        var promise = fetchPage([]);\n\n        for (var i = 1; i < prevPages.length; i++) {\n          promise = promise.then(fetchPage);\n        }\n\n        return promise;\n      }\n    }; // Set to fetching state if not already in it\n\n\n    if (!this.state.isFetching || this.state.isFetchingMore !== isFetchingMore) {\n      this.dispatch({\n        type: ActionType.Fetch,\n        isFetchingMore: isFetchingMore\n      });\n    } // Try to get the data\n\n\n    return this.tryFetchData(config, fetchData);\n  };\n\n  _proto.tryFetchData = function tryFetchData(config, fn) {\n    var _this5 = this;\n\n    return new Promise(function (outerResolve, outerReject) {\n      var resolved = false;\n      var continueLoop;\n      var cancelTransport;\n\n      var done = function done() {\n        resolved = true;\n        delete _this5.cancelFetch;\n        delete _this5.continueFetch;\n        delete _this5.isTransportCancelable; // End loop if currently paused\n\n        continueLoop == null ? void 0 : continueLoop();\n      };\n\n      var resolve = function resolve(value) {\n        done();\n        outerResolve(value);\n      };\n\n      var reject = function reject(value) {\n        done();\n        outerReject(value);\n      }; // Create callback to cancel this fetch\n\n\n      _this5.cancelFetch = function (silent) {\n        reject(new CancelledError(silent));\n        cancelTransport == null ? void 0 : cancelTransport();\n      }; // Create callback to continue this fetch\n\n\n      _this5.continueFetch = function () {\n        continueLoop == null ? void 0 : continueLoop();\n      }; // Create loop function\n\n\n      var run = _async(function () {\n        return _catch(function () {\n          // Execute query\n          var promiseOrValue = fn(); // Check if the transport layer support cancellation\n\n          if (isCancelable(promiseOrValue)) {\n            cancelTransport = function cancelTransport() {\n              try {\n                promiseOrValue.cancel();\n              } catch (_unused) {}\n            };\n\n            _this5.isTransportCancelable = true;\n          } // Await data\n\n\n          return _await(promiseOrValue, function (_promiseOrValue) {\n            resolve(_promiseOrValue);\n          });\n        }, function (error) {\n          // Stop if the fetch is already resolved\n          if (resolved) {\n            return;\n          } // Do we need to retry the request?\n\n\n          var failureCount = _this5.state.failureCount;\n          var retry = config.retry,\n              retryDelay = config.retryDelay;\n          var shouldRetry = retry === true || failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n          if (!shouldRetry) {\n            // We are done if the query does not need to be retried\n            reject(error);\n            return;\n          } // Increase the failureCount\n\n\n          _this5.dispatch({\n            type: ActionType.Failed\n          }); // Delay\n\n\n          return _await(sleep(functionalUpdate(retryDelay, failureCount) || 0), function () {\n            // Pause retry if the document is not visible or when the device is offline\n            return _invoke(function () {\n              if (!isDocumentVisible() || !isOnline()) {\n                return _awaitIgnored(new Promise(function (continueResolve) {\n                  continueLoop = continueResolve;\n                }));\n              }\n            }, function () {\n              if (!resolved) {\n                run();\n              }\n            }); // Try again if not resolved yet\n          });\n        });\n      }); // Start loop\n\n\n      run();\n    });\n  };\n\n  return Query;\n}();\n\nfunction getLastPage(pages, previous) {\n  return previous ? pages[0] : pages[pages.length - 1];\n}\n\nfunction hasMorePages(config, pages, previous) {\n  if (config.infinite && config.getFetchMore && Array.isArray(pages)) {\n    return Boolean(config.getFetchMore(getLastPage(pages, previous), pages));\n  }\n}\n\nfunction getDefaultState(config) {\n  var data = typeof config.initialData === 'function' ? config.initialData() : config.initialData;\n  var status = typeof data !== 'undefined' ? QueryStatus.Success : config.enabled ? QueryStatus.Loading : QueryStatus.Idle;\n  return {\n    canFetchMore: hasMorePages(config, data),\n    data: data,\n    error: null,\n    failureCount: 0,\n    isFetching: status === QueryStatus.Loading,\n    isFetchingMore: false,\n    isInitialData: true,\n    isInvalidated: false,\n    status: status,\n    updateCount: 0,\n    updatedAt: Date.now()\n  };\n}\n\nexport function queryReducer(state, action) {\n  var _action$updatedAt;\n\n  switch (action.type) {\n    case ActionType.Failed:\n      return _extends({}, state, {\n        failureCount: state.failureCount + 1\n      });\n\n    case ActionType.Fetch:\n      return _extends({}, state, {\n        failureCount: 0,\n        isFetching: true,\n        isFetchingMore: action.isFetchingMore || false,\n        status: typeof state.data !== 'undefined' ? QueryStatus.Success : QueryStatus.Loading\n      });\n\n    case ActionType.Success:\n      return _extends({}, state, {\n        canFetchMore: action.canFetchMore,\n        data: action.data,\n        error: null,\n        failureCount: 0,\n        isFetching: false,\n        isFetchingMore: false,\n        isInitialData: false,\n        isInvalidated: false,\n        status: QueryStatus.Success,\n        updateCount: state.updateCount + 1,\n        updatedAt: (_action$updatedAt = action.updatedAt) != null ? _action$updatedAt : Date.now()\n      });\n\n    case ActionType.Error:\n      return _extends({}, state, {\n        error: action.error,\n        failureCount: state.failureCount + 1,\n        isFetching: false,\n        isFetchingMore: false,\n        status: QueryStatus.Error,\n        throwInErrorBoundary: true,\n        updateCount: state.updateCount + 1\n      });\n\n    case ActionType.Invalidate:\n      return _extends({}, state, {\n        isInvalidated: true\n      });\n\n    default:\n      return state;\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { deepIncludes, getQueryArgs, isDocumentVisible, isOnline, isPlainObject, isServer, noop } from './utils';\nimport { getResolvedQueryConfig as _getResolvedQueryConfig } from './config';\nimport { Query } from './query';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver'; // TYPES\n\n// CLASS\nexport var QueryCache = /*#__PURE__*/function () {\n  function QueryCache(config) {\n    this.config = config || {};\n    this.globalListeners = [];\n    this.queries = {};\n    this.queriesArray = [];\n    this.isFetching = 0;\n  }\n\n  var _proto = QueryCache.prototype;\n\n  _proto.notifyGlobalListeners = function notifyGlobalListeners(query) {\n    var _this = this;\n\n    this.isFetching = this.getQueries().reduce(function (acc, q) {\n      return q.state.isFetching ? acc + 1 : acc;\n    }, 0);\n    notifyManager.batch(function () {\n      _this.globalListeners.forEach(function (listener) {\n        notifyManager.schedule(function () {\n          listener(_this, query);\n        });\n      });\n    });\n  };\n\n  _proto.getDefaultConfig = function getDefaultConfig() {\n    return this.config.defaultConfig;\n  };\n\n  _proto.getResolvedQueryConfig = function getResolvedQueryConfig(queryKey, config) {\n    return _getResolvedQueryConfig(this, queryKey, undefined, config);\n  };\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this2 = this;\n\n    this.globalListeners.push(listener);\n    return function () {\n      _this2.globalListeners = _this2.globalListeners.filter(function (x) {\n        return x !== listener;\n      });\n    };\n  };\n\n  _proto.clear = function clear(options) {\n    this.removeQueries();\n\n    if (options == null ? void 0 : options.notify) {\n      this.notifyGlobalListeners();\n    }\n  };\n\n  _proto.getQueries = function getQueries(predicate, options) {\n    var anyKey = predicate === true || typeof predicate === 'undefined';\n\n    if (anyKey && !options) {\n      return this.queriesArray;\n    }\n\n    var predicateFn;\n\n    if (typeof predicate === 'function') {\n      predicateFn = predicate;\n    } else {\n      var _ref = options || {},\n          exact = _ref.exact,\n          active = _ref.active,\n          stale = _ref.stale;\n\n      var resolvedConfig = this.getResolvedQueryConfig(predicate);\n\n      predicateFn = function predicateFn(query) {\n        // Check query key if needed\n        if (!anyKey) {\n          if (exact) {\n            // Check if the query key matches exactly\n            if (query.queryHash !== resolvedConfig.queryHash) {\n              return false;\n            }\n          } else {\n            // Check if the query key matches partially\n            if (!deepIncludes(query.queryKey, resolvedConfig.queryKey)) {\n              return false;\n            }\n          }\n        } // Check active state if needed\n\n\n        if (typeof active === 'boolean' && query.isActive() !== active) {\n          return false;\n        } // Check stale state if needed\n\n\n        if (typeof stale === 'boolean' && query.isStale() !== stale) {\n          return false;\n        }\n\n        return true;\n      };\n    }\n\n    return this.queriesArray.filter(predicateFn);\n  };\n\n  _proto.getQuery = function getQuery(predicate) {\n    return this.getQueries(predicate, {\n      exact: true\n    })[0];\n  };\n\n  _proto.getQueryByHash = function getQueryByHash(queryHash) {\n    return this.queries[queryHash];\n  };\n\n  _proto.getQueryData = function getQueryData(predicate) {\n    var _this$getQuery;\n\n    return (_this$getQuery = this.getQuery(predicate)) == null ? void 0 : _this$getQuery.state.data;\n  };\n\n  _proto.removeQuery = function removeQuery(query) {\n    if (this.queries[query.queryHash]) {\n      query.destroy();\n      delete this.queries[query.queryHash];\n      this.queriesArray = this.queriesArray.filter(function (x) {\n        return x !== query;\n      });\n      this.notifyGlobalListeners(query);\n    }\n  };\n\n  _proto.removeQueries = function removeQueries(predicate, options) {\n    var _this3 = this;\n\n    this.getQueries(predicate, options).forEach(function (query) {\n      _this3.removeQuery(query);\n    });\n  };\n\n  _proto.cancelQueries = function cancelQueries(predicate, options) {\n    this.getQueries(predicate, options).forEach(function (query) {\n      query.cancel();\n    });\n  }\n  /**\n   * @return Promise resolving to an array with the invalidated queries.\n   */\n  ;\n\n  _proto.invalidateQueries = function invalidateQueries(predicate, options) {\n    var queries = this.getQueries(predicate, options);\n    notifyManager.batch(function () {\n      queries.forEach(function (query) {\n        query.invalidate();\n      });\n    });\n\n    var _ref2 = options || {},\n        _ref2$refetchActive = _ref2.refetchActive,\n        refetchActive = _ref2$refetchActive === void 0 ? true : _ref2$refetchActive,\n        _ref2$refetchInactive = _ref2.refetchInactive,\n        refetchInactive = _ref2$refetchInactive === void 0 ? false : _ref2$refetchInactive;\n\n    if (!refetchInactive && !refetchActive) {\n      return Promise.resolve(queries);\n    }\n\n    var refetchOptions = _extends({}, options);\n\n    if (refetchActive && !refetchInactive) {\n      refetchOptions.active = true;\n    } else if (refetchInactive && !refetchActive) {\n      refetchOptions.active = false;\n    }\n\n    var promise = this.refetchQueries(predicate, refetchOptions);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(function () {\n        return queries;\n      });\n    }\n\n    return promise.then(function () {\n      return queries;\n    });\n  }\n  /**\n   * @return Promise resolving to an array with the refetched queries.\n   */\n  ;\n\n  _proto.refetchQueries = function refetchQueries(predicate, options) {\n    var _this4 = this;\n\n    var promises = [];\n    notifyManager.batch(function () {\n      _this4.getQueries(predicate, options).forEach(function (query) {\n        var promise = query.fetch().then(function () {\n          return query;\n        });\n\n        if (!(options == null ? void 0 : options.throwOnError)) {\n          promise = promise.catch(function () {\n            return query;\n          });\n        }\n\n        promises.push(promise);\n      });\n    });\n    return Promise.all(promises);\n  };\n\n  _proto.resetErrorBoundaries = function resetErrorBoundaries() {\n    this.getQueries().forEach(function (query) {\n      query.state.throwInErrorBoundary = false;\n    });\n  };\n\n  _proto.buildQuery = function buildQuery(queryKey, config) {\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, config);\n    var query = this.getQueryByHash(resolvedConfig.queryHash);\n\n    if (!query) {\n      query = this.createQuery(resolvedConfig);\n    }\n\n    return query;\n  };\n\n  _proto.createQuery = function createQuery(config) {\n    var query = new Query(config); // A frozen cache does not add new queries to the cache\n\n    if (!this.config.frozen) {\n      this.queries[query.queryHash] = query;\n      this.queriesArray.push(query);\n      this.notifyGlobalListeners(query);\n    }\n\n    return query;\n  } // Parameter syntax\n  ;\n\n  // Implementation\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\n    var _getQueryArgs = getQueryArgs(arg1, arg2, arg3),\n        queryKey = _getQueryArgs[0],\n        config = _getQueryArgs[1];\n\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, _extends({\n      // https://github.com/tannerlinsley/react-query/issues/652\n      retry: false\n    }, config));\n    var query = this.getQueryByHash(resolvedConfig.queryHash);\n\n    if (!query) {\n      query = this.createQuery(resolvedConfig);\n    }\n\n    if (!query.isStaleByTime(config.staleTime)) {\n      return Promise.resolve(query.state.data);\n    }\n\n    return query.fetch(undefined, resolvedConfig);\n  } // Parameter syntax with optional prefetch options\n  ;\n\n  // Implementation\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3, arg4) {\n    if (isPlainObject(arg2) && (arg2.hasOwnProperty('throwOnError') || arg2.hasOwnProperty('force'))) {\n      arg4 = arg2;\n      arg2 = undefined;\n      arg3 = undefined;\n    }\n\n    var _getQueryArgs2 = getQueryArgs(arg1, arg2, arg3, arg4),\n        queryKey = _getQueryArgs2[0],\n        config = _getQueryArgs2[1],\n        options = _getQueryArgs2[2];\n\n    if (options == null ? void 0 : options.force) {\n      config.staleTime = 0;\n    }\n\n    var promise = this.fetchQuery(queryKey, config);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  } // Parameter syntax\n  ;\n\n  // Implementation\n  _proto.watchQuery = function watchQuery(arg1, arg2, arg3) {\n    var _getQueryArgs3 = getQueryArgs(arg1, arg2, arg3),\n        queryKey = _getQueryArgs3[0],\n        config = _getQueryArgs3[1];\n\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, config);\n    return new QueryObserver(resolvedConfig);\n  };\n\n  _proto.setQueryData = function setQueryData(queryKey, updater, config) {\n    this.buildQuery(queryKey, config).setData(updater);\n  };\n\n  return QueryCache;\n}();\nvar defaultQueryCache = new QueryCache({\n  frozen: isServer\n});\nexport { defaultQueryCache as queryCache };\nexport var queryCaches = [defaultQueryCache];\n/**\n * @deprecated\n */\n\nexport function makeQueryCache(config) {\n  return new QueryCache(config);\n}\nexport function onVisibilityOrOnlineChange(type) {\n  if (isDocumentVisible() && isOnline()) {\n    notifyManager.batch(function () {\n      queryCaches.forEach(function (queryCache) {\n        queryCache.getQueries().forEach(function (query) {\n          query.onInteraction(type);\n        });\n      });\n    });\n  }\n}","import { createSetHandler, isServer } from './utils';\nimport { onVisibilityOrOnlineChange } from './queryCache';\nexport var setFocusHandler = createSetHandler(function () {\n  return onVisibilityOrOnlineChange('focus');\n});\nsetFocusHandler(function (handleFocus) {\n  var _window;\n\n  if (isServer || !((_window = window) == null ? void 0 : _window.addEventListener)) {\n    return;\n  } // Listen to visibillitychange and focus\n\n\n  window.addEventListener('visibilitychange', handleFocus, false);\n  window.addEventListener('focus', handleFocus, false);\n  return function () {\n    // Be sure to unsubscribe if a new handler is set\n    window.removeEventListener('visibilitychange', handleFocus);\n    window.removeEventListener('focus', handleFocus);\n  };\n});","import { createSetHandler, isServer } from './utils';\nimport { onVisibilityOrOnlineChange } from './queryCache';\nexport var setOnlineHandler = createSetHandler(function () {\n  return onVisibilityOrOnlineChange('online');\n});\nsetOnlineHandler(function (handleOnline) {\n  var _window;\n\n  if (isServer || !((_window = window) == null ? void 0 : _window.addEventListener)) {\n    return;\n  } // Listen to online\n\n\n  window.addEventListener('online', handleOnline, false);\n  return function () {\n    // Be sure to unsubscribe if a new handler is set\n    window.removeEventListener('online', handleOnline);\n  };\n});","import ReactDOM from 'react-dom';\nexport var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;","import React from 'react';\nimport { QueryCache, queryCache as defaultQueryCache, queryCaches } from '../core';\nvar queryCacheContext = /*#__PURE__*/React.createContext(defaultQueryCache);\nexport var useQueryCache = function useQueryCache() {\n  return React.useContext(queryCacheContext);\n};\nexport var ReactQueryCacheProvider = function ReactQueryCacheProvider(_ref) {\n  var queryCache = _ref.queryCache,\n      children = _ref.children;\n  var resolvedQueryCache = React.useMemo(function () {\n    return queryCache || new QueryCache();\n  }, [queryCache]);\n  React.useEffect(function () {\n    queryCaches.push(resolvedQueryCache);\n    return function () {\n      // remove the cache from the active list\n      var i = queryCaches.indexOf(resolvedQueryCache);\n\n      if (i > -1) {\n        queryCaches.splice(i, 1);\n      } // if the resolvedQueryCache was created by us, we need to tear it down\n\n\n      if (queryCache == null) {\n        resolvedQueryCache.clear({\n          notify: false\n        });\n      }\n    };\n  }, [resolvedQueryCache, queryCache]);\n  return /*#__PURE__*/React.createElement(queryCacheContext.Provider, {\n    value: resolvedQueryCache\n  }, children);\n};","import React from 'react';\nimport { mergeReactQueryConfigs } from '../core/config';\nvar configContext = /*#__PURE__*/React.createContext(undefined);\nexport function useContextConfig() {\n  return React.useContext(configContext);\n}\nexport var ReactQueryConfigProvider = function ReactQueryConfigProvider(_ref) {\n  var config = _ref.config,\n      children = _ref.children;\n  var parentConfig = useContextConfig();\n  var mergedConfig = React.useMemo(function () {\n    return parentConfig ? mergeReactQueryConfigs(parentConfig, config) : config;\n  }, [config, parentConfig]);\n  return /*#__PURE__*/React.createElement(configContext.Provider, {\n    value: mergedConfig\n  }, children);\n};","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar context = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useErrorResetBoundary = function useErrorResetBoundary() {\n  return React.useContext(context);\n}; // COMPONENT\n\nexport var ReactQueryErrorResetBoundary = function ReactQueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { isServer } from '../core/utils';\nexport function useIsMounted() {\n  var mountedRef = React.useRef(false);\n  var isMounted = React.useCallback(function () {\n    return mountedRef.current;\n  }, []);\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return isMounted;\n}\nexport function useMountedCallback(callback) {\n  var isMounted = useIsMounted();\n  return React.useCallback(function () {\n    if (isMounted()) {\n      return callback.apply(void 0, arguments);\n    }\n  }, [callback, isMounted]);\n}","import React from 'react';\nimport { useIsMounted } from './utils';\nimport { getResolvedQueryConfig } from '../core/config';\nimport { QueryObserver } from '../core/queryObserver';\nimport { useErrorResetBoundary } from './ReactQueryErrorResetBoundary';\nimport { useQueryCache } from './ReactQueryCacheProvider';\nimport { useContextConfig } from './ReactQueryConfigProvider';\nexport function useBaseQuery(queryKey, config) {\n  var _React$useReducer = React.useReducer(function (c) {\n    return c + 1;\n  }, 0),\n      rerender = _React$useReducer[1];\n\n  var isMounted = useIsMounted();\n  var cache = useQueryCache();\n  var contextConfig = useContextConfig();\n  var errorResetBoundary = useErrorResetBoundary(); // Get resolved config\n\n  var resolvedConfig = getResolvedQueryConfig(cache, queryKey, contextConfig, config); // Create query observer\n\n  var observerRef = React.useRef();\n  var firstRender = !observerRef.current;\n  var observer = observerRef.current || new QueryObserver(resolvedConfig);\n  observerRef.current = observer; // Subscribe to the observer\n\n  React.useEffect(function () {\n    errorResetBoundary.clearReset();\n    return observer.subscribe(function () {\n      if (isMounted()) {\n        rerender();\n      }\n    });\n  }, [isMounted, observer, rerender, errorResetBoundary]); // Update config\n\n  if (!firstRender) {\n    observer.updateConfig(resolvedConfig);\n  }\n\n  var result = observer.getCurrentResult(); // Handle suspense\n\n  if (resolvedConfig.suspense || resolvedConfig.useErrorBoundary) {\n    var query = observer.getCurrentQuery();\n\n    if (result.isError && !errorResetBoundary.isReset() && query.state.throwInErrorBoundary) {\n      throw result.error;\n    }\n\n    if (resolvedConfig.enabled && resolvedConfig.suspense && !result.isSuccess) {\n      errorResetBoundary.clearReset();\n      var unsubscribe = observer.subscribe();\n      throw observer.fetch().finally(unsubscribe);\n    }\n  }\n\n  return result;\n}","import { getQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // TYPES\n\n// Implementation\nexport function useQuery(arg1, arg2, arg3) {\n  var _getQueryArgs = getQueryArgs(arg1, arg2, arg3),\n      queryKey = _getQueryArgs[0],\n      config = _getQueryArgs[1];\n\n  return useBaseQuery(queryKey, config);\n}","import { setBatchedUpdates } from './core/index';\nimport { unstable_batchedUpdates } from './react/reactBatchedUpdates';\nsetBatchedUpdates(unstable_batchedUpdates);\nexport * from './core/index';\nexport * from './react/index';"],"sourceRoot":""}