{"version":3,"file":"static/js/165.27705443.chunk.js","mappings":"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","sources":["components/Converter.js","components/Tile.js","components/TileListSkeleton.js","components/TileList.js","pages/MoviesPage.js"],"sourcesContent":["class Converter {\n\tstatic convertMoviesToTiles = (movies) => {\n\t\treturn movies.map(m => {\n\t\t\treturn {id: m.id, title: m.original_title, desc: m.tagline, banner: m.backdrop_path, type: 'movie'}\n\t\t})\n\t}\n\n\tstatic convertShowsToTiles = (movies) => {\n\t\treturn movies.map(m => {\n\t\t\treturn {id: m.id, title: m.name, desc: m.overview, banner: m.backdrop_path, type: 'tv'}\n\t\t})\n\t}\n\n\tstatic convertToTile = (type, watchable) => {\n\t\treturn {id: watchable.id, title: type === 'tv' ? watchable.name : watchable.original_title, desc: type === 'tv' ? watchable.overview : watchable.tagline, banner: watchable.backdrop_path, type: type, overview: watchable.overview}\n\t}\n}\n\nexport default Converter\n","import React from \"react\";\nimport \"./Tile.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Tile({ data }) {\n  return (\n    <Link\n      to={`/playing/${data ? data.type : \"\"}/${data ? data.id : \"\"}`}\n      className=\"tile\"\n      style={\n        data\n          ? {\n              backgroundImage: `url(https://image.tmdb.org/t/p/w500${data.banner})`,\n            }\n          : {}\n      }\n    >\n      <div className=\"tile__cont\">\n        <h3 className=\"tile__title\">{data ? data.title : \"\"}</h3>\n        <button className=\"tile__play\">\n          <img\n            className=\"tile__icon\"\n            src={require(\"../images/streamline-icon-controls-play@15x15.png\")}\n            alt=\"\"\n          />\n        </button>\n      </div>\n    </Link>\n  );\n}\n\nexport default Tile;\n","import React from 'react'\nimport './TileListSkeleton.css'\n\nfunction TileListSkeleton() {\n    return (\n        <div className=\"tlistske\">\n        \t<div className=\"tlistske__tile\"></div>\n        \t<div className=\"tlistske__tile\"></div>\n        \t<div className=\"tlistske__tile\"></div>\n        \t<div className=\"tlistske__tile\"></div>\n        \t<div className=\"tlistske__tile\"></div>\n        </div>\n    )\n}\n\nexport default TileListSkeleton\n","import React from 'react'\nimport './TileList.css'\nimport Tile from './Tile.js'\nimport TileListSkeleton from './TileListSkeleton.js'\n\nfunction TileList({data, title, isLoading}) {\n\n\tif (isLoading) return <TileListSkeleton/>\n\n    return (\n    \t<div className=\"tlist\">\n    \t\t<h2 className=\"tlist__title\">{title}</h2>\n\t        <div className=\"tlist__cont\">\n\t        \t{data && data.map(t => <Tile data={t} key={t.id}/>)}\n\t        </div>\n    \t</div>\n    )\n}\n\nexport default TileList\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport \"./MoviesPage.css\";\nimport TileList from \"../components/TileList.js\";\nimport feedbackState from \"../atoms/feedbackState.js\";\nimport { useSetRecoilState } from \"recoil\";\nimport Converter from \"../components/Converter.js\";\n\nfunction MoviesPage() {\n  const setFeedback = useSetRecoilState(feedbackState);\n  const {\n    data: trendingMoviesData,\n    isLoading: trendingMoviesIsLoading,\n    error: trendingMoviesError,\n  } = useQuery(\"trending\", async () => {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=bd7686376aa170d6af7fce5aee732f55`\n    );\n    const data = await res.json();\n    return Converter.convertMoviesToTiles(data.results.splice(0, 5));\n  });\n  const {\n    data: topRatedData,\n    isLoading: topRatedIsLoading,\n    error: topRatedError,\n  } = useQuery(\"tr\", async () => {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=bd7686376aa170d6af7fce5aee732f55`\n    );\n    const data = await res.json();\n    return Converter.convertMoviesToTiles(data.results.splice(0, 5));\n  });\n  const {\n    data: nowData,\n    isLoading: nowIsLoading,\n    error: nowError,\n  } = useQuery(\"now\", async () => {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=bd7686376aa170d6af7fce5aee732f55`\n    );\n    const data = await res.json();\n    return Converter.convertMoviesToTiles(data.results.splice(0, 5));\n  });\n\n  if (trendingMoviesError || topRatedError || nowError) {\n    setFeedback({ isVisible: true, message: \"Oops, something went wrong\" });\n  }\n\n  return (\n    <div className=\"moviesp\">\n      <div className=\"tlist__wrapper tlist__wrapper--tall\">\n        <TileList\n          title=\"New releases\"\n          data={nowData}\n          isLoading={nowIsLoading}\n        />\n      </div>\n      <div className=\"tlist__wrapper tlist__wrapper--grey\">\n        <TileList\n          title=\"Top rated\"\n          data={topRatedData}\n          isLoading={topRatedIsLoading}\n        />\n      </div>\n      <div className=\"tlist__wrapper\" fallback={<div></div>}>\n        <TileList\n          title=\"Trending now\"\n          data={trendingMoviesData}\n          isLoading={trendingMoviesIsLoading}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MoviesPage;\n"],"names":["Converter","_createClass","_classCallCheck","convertMoviesToTiles","movies","map","m","id","title","original_title","desc","tagline","banner","backdrop_path","type","convertShowsToTiles","name","overview","convertToTile","watchable","_ref","data","_jsx","Link","to","concat","className","style","backgroundImage","children","_jsxs","src","require","alt","isLoading","TileListSkeleton","t","Tile","setFeedback","useSetRecoilState","feedbackState","_useQuery","useQuery","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","fetch","sent","json","abrupt","results","splice","stop","trendingMoviesData","trendingMoviesIsLoading","trendingMoviesError","error","_useQuery2","_callee2","_context2","topRatedData","topRatedIsLoading","topRatedError","_useQuery3","_callee3","_context3","nowData","nowIsLoading","nowError","isVisible","message","TileList","fallback"],"sourceRoot":""}