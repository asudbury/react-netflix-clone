{"version":3,"file":"static/js/177.900c8b7a.chunk.js","mappings":"gJAAWA,E,UAEX,SAAWA,GACTA,EAAkB,KAAI,OACtBA,EAAqB,QAAI,UACzBA,EAAmB,MAAI,QACvBA,EAAqB,QAAI,SAC1B,CALD,CAKGA,IAAgBA,EAAc,CAAC,ICJ3B,IAAIC,EAAiB,SAAwBC,GAClDC,KAAKD,OAASA,CAChB,EAMO,IAAIE,EAA6B,qBAAXC,OACtB,SAASC,IAEhB,CACO,IAAIC,EAAUC,SAAW,CAC9BC,MAAOH,EACPI,KAAMJ,EACNK,IAAKL,GAKA,SAASM,EAAiBC,EAASC,GACxC,MAA0B,oBAAZD,EAAyBA,EAAQC,GAASD,CAC1D,CAEA,SAASE,EAAwBC,EAAMC,GACrC,GAAqB,oBAAVA,EACT,MAAM,IAAIC,MAGZ,OAAIC,EAAcF,GACTG,OAAOC,KAAKJ,GAAOK,OAAOC,QAAO,SAAUC,EAAQC,GAExD,OADAD,EAAOC,GAAOR,EAAMQ,GACbD,CACT,GAAG,CAAC,GAGCP,CACT,CAKO,SAASS,EAAaC,EAAGC,GAC9B,OAAID,IAAMC,UAICD,WAAaC,IAIP,kBAAND,IACDP,OAAOC,KAAKO,GAAGC,MAAK,SAAUJ,GACpC,OAAQC,EAAaC,EAAEF,GAAMG,EAAEH,GACjC,IAIJ,CACO,SAASK,EAAeb,GAC7B,MAAwB,kBAAVA,GAAsBA,GAAS,GAAKA,IAAUc,GAC9D,CACO,SAASC,IAEd,MAAwB,qBAAbC,UAIJ,MAACC,EAAW,UAAW,aAAaC,SAASF,SAASG,gBAC/D,CACO,SAASC,IACd,YAA4BH,IAArBI,UAAUC,QAAwBD,UAAUC,MACrD,CACO,SAASC,EAAaC,EAAMC,EAAMC,EAAMC,GAC7C,IAAIC,EACAC,EACAC,EACAC,EA0BJ,OAxBI7B,EAAcsB,IAChBI,EAAWJ,EAAKI,SAChBC,EAAUL,EAAKK,QACfC,EAASN,EAAKM,OACdC,EAAUN,GACDvB,EAAcuB,IACvBG,EAAWJ,EACXM,EAASL,EACTM,EAAUL,IAEVE,EAAWJ,EACXK,EAAUJ,EACVK,EAASJ,EACTK,EAAUJ,GAGZG,EAASA,GAAU,CAAC,EAEhBD,IACFC,GAASE,EAAAA,EAAAA,GAAS,CAAC,EAAGF,EAAQ,CAC5BD,QAASA,KAIN,CAACD,EAAUE,EAAQC,EAC5B,CAOO,SAASE,EAAiBvB,EAAGC,GAClC,GAAID,IAAMC,EACR,OAAOD,EAGT,IAAIwB,EAAQC,MAAMC,QAAQ1B,IAAMyB,MAAMC,QAAQzB,GAE9C,GAAIuB,GAAShC,EAAcQ,IAAMR,EAAcS,GAAI,CAOjD,IANA,IAAI0B,EAAQH,EAAQxB,EAAE4B,OAASnC,OAAOC,KAAKM,GAAG4B,OAC1CC,EAASL,EAAQvB,EAAIR,OAAOC,KAAKO,GACjC6B,EAAQD,EAAOD,OACfG,EAAOP,EAAQ,GAAK,CAAC,EACrBQ,EAAa,EAERC,EAAI,EAAGA,EAAIH,EAAOG,IAAK,CAC9B,IAAInC,EAAM0B,EAAQS,EAAIJ,EAAOI,GAC7BF,EAAKjC,GAAOyB,EAAiBvB,EAAEF,GAAMG,EAAEH,IAEnCiC,EAAKjC,KAASE,EAAEF,IAClBkC,GAEJ,CAEA,OAAOL,IAAUG,GAASE,IAAeL,EAAQ3B,EAAI+B,CACvD,CAEA,OAAO9B,CACT,CAEO,SAAST,EAAc0C,GAC5B,IAAKC,EAAmBD,GACtB,OAAO,EAIT,IAAIE,EAAOF,EAAEG,YAEb,GAAoB,qBAATD,EACT,OAAO,EAIT,IAAIE,EAAOF,EAAKG,UAEhB,QAAKJ,EAAmBG,MAKnBA,EAAKE,eAAe,gBAM3B,CAEA,SAASL,EAAmBD,GAC1B,MAA6C,oBAAtCzC,OAAO8C,UAAUE,SAASC,KAAKR,EACxC,CAQO,SAASS,EAAiBrD,GAC/B,OAAOA,aAAiBhB,CAC1B,CAeO,SAASsE,EAAiBC,GAC/B,IAAIC,EACJ,OAAO,SAAUC,GAEXD,GACFA,IAIFA,EAAwBC,EAASF,EACnC,CACF,CAMO,SAASG,EAAkBD,GAChCE,QAAQC,UAAUC,KAAKJ,GAAUK,OAAM,SAAUtE,GAC/C,OAAOuE,YAAW,WAChB,MAAMvE,CACR,GACF,GACF,CAGA,IAAIwE,EAAiB,SAAwBP,GAC3CA,GACF,EAOO,SAASQ,IACd,OAAOD,CACT,CCxOO,IA2BIE,EAAiB,CAC1BC,QAAS,CACPC,UAAW,IACXC,SAAS,EACTC,sBAAsB,EACtBzC,QAAS,WACP,OAAO8B,QAAQY,QACjB,EACAC,qBAnCqC,SAAqC5C,GAC5E,IACE,IAAI6C,EAAgBtC,MAAMC,QAAQR,GAAYA,EAAW,CAACA,GACtD8C,GDoCwB1E,ECpCIyE,EDqC3BE,KAAKC,UAAU5E,EAAOF,ICnC3B,MAAO,CAAC4E,EADRD,EAAgBE,KAAKE,MAAMH,GAE7B,CAAE,MAAOI,GACP,MAAM,IAAI7E,MAAM,iCAClB,CD+BK,IAAyBD,CC9BhC,EA2BI+E,gBAAgB,EAChBC,oBAAoB,EACpBC,sBAAsB,EACtBC,MAAO,EACPC,WAAY,SAAoBC,GAC9B,OAAOC,KAAKC,IAAI,IAAOD,KAAKE,IAAI,EAAGH,GAAe,IACpD,EACAI,UAAW,EACXC,mBAAmB,IAgBhB,SAASC,EAAuBC,EAAY/D,EAAUgE,EAAe9D,GAC1E,IAAI+D,EAAmBF,EAAWG,mBAE9BC,GAAiB/D,EAAAA,EAAAA,GAAS,CAAC,EAAGkC,EAAeC,QAA6B,MAApB0B,OAA2B,EAASA,EAAiBG,OAA4B,MAApBH,OAA2B,EAASA,EAAiB1B,QAA0B,MAAjByB,OAAwB,EAASA,EAAcI,OAAyB,MAAjBJ,OAAwB,EAASA,EAAczB,QAASrC,GAEhSvB,EAASwF,EAAevB,qBAAqB5C,GAIjD,OAHAmE,EAAeJ,WAAaA,EAC5BI,EAAerB,UAAYnE,EAAO,GAClCwF,EAAenE,SAAWrB,EAAO,GAC1BwF,CACT,CCtEO,IAiDIE,EAAgB,IAjDa,WACtC,SAASC,IACPhH,KAAKiH,MAAQ,GACbjH,KAAKkH,aAAe,CACtB,CAEA,IAAIC,EAASH,EAAcjD,UAwC3B,OAtCAoD,EAAOC,MAAQ,SAAe7C,GAC5BvE,KAAKkH,eACL,IAAI7F,EAASkD,IAOb,OANAvE,KAAKkH,eAEAlH,KAAKkH,cACRlH,KAAKqH,QAGAhG,CACT,EAEA8F,EAAOG,SAAW,SAAkBC,GAC9BvH,KAAKkH,aACPlH,KAAKiH,MAAMO,KAAKD,GAEhB/C,GAAkB,WAChB+C,GACF,GAEJ,EAEAJ,EAAOE,MAAQ,WACb,IAAIJ,EAAQjH,KAAKiH,MACjBjH,KAAKiH,MAAQ,GAETA,EAAM7D,QACRoB,GAAkB,WACKO,GACrBD,EAAe,WACbmC,EAAMQ,SAAQ,SAAUF,GACtBA,GACF,GACF,GACF,GAEJ,EAEOP,CACT,CA/CwC,ICC7BU,EAA6B,WACtC,SAASA,EAAc9E,GACrB5C,KAAK4C,OAASA,EACd5C,KAAK2H,SAAU,EACf3H,KAAK4H,mBAAqB,EAE1B5H,KAAK6H,OAAS7H,KAAK6H,OAAOC,KAAK9H,MAC/BA,KAAK+H,QAAU/H,KAAK+H,QAAQD,KAAK9H,MACjCA,KAAKgI,UAAYhI,KAAKgI,UAAUF,KAAK9H,MACrCA,KAAKiI,YAAcjI,KAAKiI,YAAYH,KAAK9H,MAEzCA,KAAKkI,aACP,CAEA,IAAIf,EAASO,EAAc3D,UAsV3B,OApVAoD,EAAOgB,UAAY,SAAmBC,GAWpC,OAVApI,KAAKoI,SAAWA,GAAYjI,EAC5BH,KAAKqI,aAAaC,kBAAkBtI,MAEhCA,KAAK4C,OAAOuC,UAAYnF,KAAK4C,OAAO2F,mBAAoD,WAA/BvI,KAAK4C,OAAOiD,gBACvE7F,KAAKwI,QAELxI,KAAKyI,gBAGPzI,KAAK0I,eACE1I,KAAKiI,WACd,EAEAd,EAAOc,YAAc,WACnBjI,KAAKoI,cAAWrG,EAChB/B,KAAK2I,cACL3I,KAAKqI,aAAaO,oBAAoB5I,KACxC,EAEAmH,EAAO0B,aAAe,SAAsBjG,GAC1C,IAAIkG,EAAa9I,KAAK4C,OAClBmG,EAAY/I,KAAKqI,aAIrB,GAHArI,KAAK4C,OF+BF,SAA+BA,GACpC,OAAOoG,QAAQpG,EAAO4C,UACxB,CEjCkByD,CAAsBrG,GAAUA,EAAS5C,KAAK4C,OAAO6D,WAAWD,uBAAuBxG,KAAK4C,OAAOF,SAAUE,GAC3H5C,KAAKkI,cAEAlI,KAAKoI,SAAV,CAKA,GAAIpI,KAAKqI,eAAiBU,EAGxB,OAFA/I,KAAKyI,qBACLzI,KAAK0I,eAKH9F,EAAOuC,UAAY2D,EAAW3D,SAChCnF,KAAKyI,gBAIH7F,EAAOuC,UAAY2D,EAAW3D,SAAWvC,EAAO0D,YAAcwC,EAAWxC,WAC3EtG,KAAKkJ,qBAIHtG,EAAOuC,UAAY2D,EAAW3D,SAAWvC,EAAOuG,kBAAoBL,EAAWK,iBACjFnJ,KAAKoJ,uBArBP,CAuBF,EAEAjC,EAAOkC,gBAAkB,WACvB,OAAOrJ,KAAKqI,YACd,EAEAlB,EAAOmC,iBAAmB,WACxB,OAAOtJ,KAAKuJ,aACd,EAMApC,EAAOqC,MAAQ,WACbxJ,KAAK6H,QACP,EAEAV,EAAOU,OAAS,WACd7H,KAAKqI,aAAaR,QACpB,EAEAV,EAAOY,QAAU,SAAiBlF,GAChC,OAAO7C,KAAKqI,aAAaN,QAAQlF,EAAS7C,KAAK4C,OACjD,EAEAuE,EAAOa,UAAY,SAAmByB,EAAmB5G,GACvD,OAAO7C,KAAKqI,aAAaL,UAAUyB,EAAmB5G,EAAS7C,KAAK4C,QAAQgC,MAAMzE,EACpF,EAEAgH,EAAOqB,MAAQ,WACb,IAAIkB,EAGJ,OAAI1J,KAAK4C,OAAOD,WAAiE,OAAnD+G,EAAwB1E,EAAeC,cAAmB,EAASyE,EAAsB/G,SAC9G8B,QAAQC,QAAQ1E,KAAKuJ,cAAcI,MAGrC3J,KAAKqI,aAAaG,WAAMzG,EAAW/B,KAAK4C,QAAQgC,MAAMzE,EAC/D,EAEAgH,EAAOsB,cAAgB,YACjBzI,KAAK4C,OAAOuC,UAChBnF,KAAK2H,SACH3H,KAAK4C,OAAOgH,UAAY5J,KAAKuJ,cAAcM,YAC7C7J,KAAK4C,OAAOiD,gBAAyD,IAAvC7F,KAAKqI,aAAayB,UAAU1G,QACxDpD,KAAKwI,OAET,EAEArB,EAAO+B,mBAAqB,WAC1B,IAAIa,EAAQ/J,KAEZ,IAAIC,IAIJD,KAAKgK,qBAEDhK,KAAK2H,SAAYhG,EAAe3B,KAAK4C,OAAO0D,YAAhD,CAIA,IAAI2D,EAAcC,KAAKC,MAAQnK,KAAKuJ,cAAca,UAC9CC,EAAiBrK,KAAK4C,OAAO0D,UAAY2D,EAAc,EACvDK,EAAUnE,KAAKoE,IAAIF,EAAgB,GACvCrK,KAAKwK,eAAiB3F,YAAW,WAC1BkF,EAAMpC,UACToC,EAAMpC,SAAU,EAEhBoC,EAAMU,eAENV,EAAMxC,OAAO,CACXa,UAAU,EACVsC,iBAAiB,IAGvB,GAAGJ,EAhBH,CAiBF,EAEAnD,EAAOiC,sBAAwB,WAC7B,IAAIuB,EAAS3K,KAETC,IAIJD,KAAK4K,uBAEA5K,KAAK4C,OAAOuC,SAAYxD,EAAe3B,KAAK4C,OAAOuG,mBAIxDnJ,KAAK6K,kBAAoBC,aAAY,YAC/BH,EAAO/H,OAAOmI,6BAA+BlJ,MAC/C8I,EAAOnC,OAEX,GAAGxI,KAAK4C,OAAOuG,kBACjB,EAEAhC,EAAOuB,aAAe,WACpB1I,KAAKkJ,qBACLlJ,KAAKoJ,uBACP,EAEAjC,EAAOwB,YAAc,WACnB3I,KAAKgK,oBACLhK,KAAK4K,sBACP,EAEAzD,EAAO6C,kBAAoB,WACrBhK,KAAKwK,iBACPQ,cAAchL,KAAKwK,gBACnBxK,KAAKwK,oBAAiBzI,EAE1B,EAEAoF,EAAOyD,qBAAuB,WACxB5K,KAAK6K,oBACPG,cAAchL,KAAK6K,mBACnB7K,KAAK6K,uBAAoB9I,EAE7B,EAEAoF,EAAOsD,aAAe,WACpB,IAAIQ,EAEAC,EAAQlL,KAAKqI,aAAa6C,MAC1BvB,EAAOuB,EAAMvB,KACbwB,EAASD,EAAMC,OACff,EAAYc,EAAMd,UAClBgB,GAAiB,EAEjBpL,KAAK4C,OAAOyI,kBAAoBH,EAAMI,gBAAwE,OAArDL,EAAwBjL,KAAKuL,0BAA+B,EAASN,EAAsBO,aACtJ7B,EAAO3J,KAAKuL,oBAAoB5B,KAChCS,EAAYpK,KAAKuL,oBAAoBnB,UACrCe,EAASnL,KAAKuL,oBAAoBJ,OAClCC,GAAiB,GAGnBpL,KAAKuJ,eAAgBzG,EAAAA,EAAAA,GAAS,CAAC,EHtB5B,SAAwBqI,GAC7B,MAAO,CACLA,OAAQA,EACRM,UAAWN,IAAWtL,EAAY6L,QAClCF,UAAWL,IAAWtL,EAAY8L,QAClCC,QAAST,IAAWtL,EAAYkB,MAChC8K,OAAQV,IAAWtL,EAAYiM,KAEnC,CGcsCC,CAAeZ,GAAS,CACxDa,aAAcd,EAAMc,aACpBxC,MAAOxJ,KAAK6H,OACZ8B,KAAMA,EACNrJ,MAAO4K,EAAM5K,MACb2L,aAAcf,EAAMe,aACpBjE,UAAWhI,KAAKgI,UAChB6B,UAAWqB,EAAMgB,YAAc,EAC/BC,oBAAqBjB,EAAMgB,YAAclM,KAAK4H,mBAC9CwE,WAAYlB,EAAMkB,WAClBC,eAAgBnB,EAAMmB,eACtBf,cAAeJ,EAAMI,cACrBF,eAAgBA,EAChBzD,QAAS3H,KAAK2H,QACdI,QAAS/H,KAAK+H,QACdF,OAAQ7H,KAAK6H,OACbuC,UAAWA,GAEf,EAEAjD,EAAOe,YAAc,WACnB,IAAItF,EAAS5C,KAAK4C,OACdmG,EAAY/I,KAAKqI,aACjBiE,EAAQ1J,EAAO6D,WAAW8F,eAAe3J,EAAO4C,WAE/C8G,IACHA,EAAQ1J,EAAO6D,WAAW+F,YAAY5J,IAGpC0J,IAAUvD,IAId/I,KAAKuL,oBAAsBvL,KAAKuJ,cAChCvJ,KAAKqI,aAAeiE,EACpBtM,KAAK4H,mBAAqB0E,EAAMpB,MAAMgB,YAElCI,EAAMpB,MAAMI,cACV1I,EAAOyI,kBAAoBtC,EAC7B/I,KAAK2H,SAAU,EACyB,oBAAxB/E,EAAO6J,aACvBzM,KAAK2H,QAAU/E,EAAO6J,eACkB,mBAAxB7J,EAAO6J,aACvBzM,KAAK2H,QAAU/E,EAAO6J,aAEtBzM,KAAK2H,QAAsC,qBAArB2E,EAAMpB,MAAMvB,KAGpC3J,KAAK2H,QAAU2E,EAAMI,cAAc9J,EAAO0D,WAG5CtG,KAAKyK,eAEDzK,KAAKoI,WACM,MAAbW,GAA6BA,EAAUH,oBAAoB5I,MAC3DA,KAAKqI,aAAaC,kBAAkBtI,OAExC,EAEAmH,EAAOwF,cAAgB,SAAuBC,GAC5C,IAAIhK,EAAS5C,KAAK4C,OACdiK,EAAOD,EAAOC,KAEL,IAATA,GAAuB,IAATA,GAAuB,IAATA,IAC9B7M,KAAK2H,QAAU3H,KAAKqI,aAAaqE,cAAc9J,EAAO0D,YAIxD,IAAIwG,EAAa9M,KAAKuJ,cACtBvJ,KAAKyK,eACL,IAAIlB,EAAgBvJ,KAAKuJ,cAOzB,GALa,IAATsD,GAAuB,IAATA,GAAuB,IAATA,GAC9B7M,KAAK0I,eAIM,IAATmE,GAActD,EAAc5B,UAAYmF,EAAWnF,QAAvD,CAKA,IAAIoF,EAAgB,CAAC,EAER,IAATF,EACFE,EAAcC,WAAY,EACR,IAATH,IACTE,EAAcE,SAAU,IAI1BrK,EAAOwC,sBACPmE,EAAcI,OAASmD,EAAWnD,MAAQJ,EAAcjJ,QAAUwM,EAAWxM,SAC3EyM,EAAc3E,UAAW,GAG3BpI,KAAKuH,OAAOwF,EAjBZ,CAkBF,EAEA5F,EAAOI,OAAS,SAAgB1E,GAC9B,IAAID,EAAS5C,KAAK4C,OACd2G,EAAgBvJ,KAAKuJ,cACrBlB,EAAerI,KAAKqI,aACpBD,EAAWpI,KAAKoI,SAChB4E,EAAYpK,EAAOoK,UACnBE,EAAYtK,EAAOsK,UACnBD,EAAUrK,EAAOqK,QACrBlG,EAAcK,OAAM,WAEdvE,EAAQmK,WACNA,GACFjG,EAAcO,UAAS,WACrB0F,EAAUzD,EAAcI,KAC1B,IAGEuD,GACFnG,EAAcO,UAAS,WACrB4F,EAAU3D,EAAcI,KAAM,KAChC,KAEO9G,EAAQoK,UACbA,GACFlG,EAAcO,UAAS,WACrB2F,EAAQ1D,EAAcjJ,MACxB,IAGE4M,GACFnG,EAAcO,UAAS,WACrB4F,OAAUnL,EAAWwH,EAAcjJ,MACrC,KAKAuC,EAAQuF,UAAYA,GACtBrB,EAAcO,UAAS,WACrBc,EAASmB,EACX,IAIE1G,EAAQ6H,iBACV9H,EAAO6D,WAAW0G,sBAAsB9E,EAE5C,GACF,EAEOX,CACT,CArWwC,GCExC,SAAS0F,IAAU,CAEnB,IAAIC,EAAa,CACfC,OAAQ,EACRC,MAAO,EACP5B,QAAS,EACT5K,MAAO,EACPyM,WAAY,GAId,SAASC,EAAc3M,EAAO4M,GAC5B,IAAKA,EACH,OAAO5M,GAASA,EAAM6D,KAAO7D,EAAM6D,KAAKyI,GAAU3I,QAAQC,SAE9D,CAEA,SAASiJ,EAAQC,EAAMjJ,GACrB,IAAItD,EAASuM,IAEb,OAAIvM,GAAUA,EAAOsD,KACZtD,EAAOsD,KAAKA,GAGdA,EAAKtD,EACd,CAEA,SAASwM,EAAO/M,EAAO6D,EAAM+I,GAC3B,OAAIA,EACK/I,EAAOA,EAAK7D,GAASA,GAGzBA,GAAUA,EAAM6D,OACnB7D,EAAQ2D,QAAQC,QAAQ5D,IAGnB6D,EAAO7D,EAAM6D,KAAKA,GAAQ7D,EACnC,CAEA,SAASgN,EAAOF,EAAMG,GACpB,IACE,IAAI1M,EAASuM,GACf,CAAE,MAAOI,GACP,OAAOD,EAAQC,EACjB,CAEA,OAAI3M,GAAUA,EAAOsD,KACZtD,EAAOsD,UAAK,EAAQoJ,GAGtB1M,CACT,CAEA,SAAS4M,EAAOC,GACd,OAAO,WACL,IAAK,IAAIC,EAAO,GAAI1K,EAAI,EAAGA,EAAI2K,UAAUhL,OAAQK,IAC/C0K,EAAK1K,GAAK2K,UAAU3K,GAGtB,IACE,OAAOgB,QAAQC,QAAQwJ,EAAEG,MAAMrO,KAAMmO,GACvC,CAAE,MAAOH,GACP,OAAOvJ,QAAQY,OAAO2I,EACxB,CACF,CACF,CAEO,IAAIM,EAAqB,WAC9B,SAASA,EAAM1L,GACb5C,KAAK4C,OAASA,EACd5C,KAAK0C,SAAWE,EAAOF,SACvB1C,KAAKwF,UAAY5C,EAAO4C,UACxBxF,KAAKyG,WAAa7D,EAAO6D,WACzBzG,KAAKkF,UAAYtC,EAAOsC,UACxBlF,KAAK8J,UAAY,GACjB9J,KAAKkL,MA0eT,SAAyBtI,GACvB,IAAI+G,EAAqC,oBAAvB/G,EAAO2L,YAA6B3L,EAAO2L,cAAgB3L,EAAO2L,YAChFpD,EAAyB,qBAATxB,EAAuB9J,EAAY8L,QAAU/I,EAAOuC,QAAUtF,EAAY6L,QAAU7L,EAAYiM,KACpH,MAAO,CACLE,aAAcwC,EAAa5L,EAAQ+G,GACnCA,KAAMA,EACNrJ,MAAO,KACP2L,aAAc,EACdG,WAAYjB,IAAWtL,EAAY6L,QACnCW,gBAAgB,EAChBf,eAAe,EACfmD,eAAe,EACftD,OAAQA,EACRe,YAAa,EACb9B,UAAWF,KAAKC,MAEpB,CA1fiBuE,CAAgB9L,GAC7B5C,KAAK2O,YACP,CAEA,IAAIxH,EAASmH,EAAMvK,UAydnB,OAvdAoD,EAAO0B,aAAe,SAAsBjG,GAC1C5C,KAAK4C,OAASA,EACd5C,KAAKkF,UAAYiB,KAAKoE,IAAIvK,KAAKkF,UAAWtC,EAAOsC,UACnD,EAEAiC,EAAOyH,SAAW,SAAkBhC,GAClC,IAAI7C,EAAQ/J,KAEZA,KAAKkL,MA8eF,SAAsBA,EAAO0B,GAClC,IAAIiC,EAEJ,OAAQjC,EAAOC,MACb,KAAKQ,EAAWC,OACd,OAAOxK,EAAAA,EAAAA,GAAS,CAAC,EAAGoI,EAAO,CACzBe,aAAcf,EAAMe,aAAe,IAGvC,KAAKoB,EAAWE,MACd,OAAOzK,EAAAA,EAAAA,GAAS,CAAC,EAAGoI,EAAO,CACzBe,aAAc,EACdG,YAAY,EACZC,eAAgBO,EAAOP,iBAAkB,EACzClB,OAA8B,qBAAfD,EAAMvB,KAAuB9J,EAAY8L,QAAU9L,EAAY6L,UAGlF,KAAK2B,EAAW1B,QACd,OAAO7I,EAAAA,EAAAA,GAAS,CAAC,EAAGoI,EAAO,CACzBc,aAAcY,EAAOZ,aACrBrC,KAAMiD,EAAOjD,KACbrJ,MAAO,KACP2L,aAAc,EACdG,YAAY,EACZC,gBAAgB,EAChBf,eAAe,EACfmD,eAAe,EACftD,OAAQtL,EAAY8L,QACpBO,YAAahB,EAAMgB,YAAc,EACjC9B,UAAqD,OAAzCyE,EAAoBjC,EAAOxC,WAAqByE,EAAoB3E,KAAKC,QAGzF,KAAKkD,EAAWtM,MACd,OAAO+B,EAAAA,EAAAA,GAAS,CAAC,EAAGoI,EAAO,CACzB5K,MAAOsM,EAAOtM,MACd2L,aAAcf,EAAMe,aAAe,EACnCG,YAAY,EACZC,gBAAgB,EAChBlB,OAAQtL,EAAYkB,MACpB+N,sBAAsB,EACtB5C,YAAahB,EAAMgB,YAAc,IAGrC,KAAKmB,EAAWG,WACd,OAAO1K,EAAAA,EAAAA,GAAS,CAAC,EAAGoI,EAAO,CACzBuD,eAAe,IAGnB,QACE,OAAOvD,EAEb,CAjiBiB6D,CAAa/O,KAAKkL,MAAO0B,GACtC7F,EAAcK,OAAM,WAClB2C,EAAMD,UAAUrC,SAAQ,SAAUuH,GAChCA,EAASrC,cAAcC,EACzB,IAEA7C,EAAMtD,WAAW0G,sBAAsBpD,EACzC,GACF,EAEA5C,EAAOwH,WAAa,WAClB,IAAIhE,EAAS3K,KAETC,IAIJD,KAAKiP,iBAEDjP,KAAK8J,UAAU1G,OAAS,IAAMzB,EAAe3B,KAAKkF,aAItDlF,KAAKkP,UAAYrK,YAAW,WAC1B8F,EAAO9C,QACT,GAAG7H,KAAKkF,YACV,EAEAiC,EAAOgI,OAAS,SAAgBpP,GAC9B,IAAIqP,EAAUpP,KAAKoP,QAEnB,OAAIA,GAAWpP,KAAKqP,aAClBrP,KAAKqP,YAAYtP,GACVqP,EAAQzK,KAAKxE,GAAMyE,MAAMzE,IAG3BsE,QAAQC,aAAQ3C,EACzB,EAEAoF,EAAOmI,SAAW,WAChB,IAAIC,EAE0C,OAA7CA,EAAsBvP,KAAKwP,gBAAkCD,EAAoBrL,KAAKlE,KACzF,EAEAmH,EAAOsI,qBAAuB,WAC5BzP,KAAK8J,UAAUrC,SAAQ,SAAUuH,GAC/BA,EAASrG,aACX,GACF,EAEAxB,EAAO8H,eAAiB,WAClBjP,KAAKkP,YACPQ,aAAa1P,KAAKkP,WAClBlP,KAAKkP,eAAYnN,EAErB,EAEAoF,EAAOwI,QAAU,SAAiBjP,EAASmC,GACzC,IAAI+M,EAAuBC,EAEvBC,EAAW9P,KAAKkL,MAAMvB,KAEtBA,EAAOlJ,EAAiBC,EAASoP,GAEjC9P,KAAK4C,OAAO2D,oBACdoD,EAAO5G,EAAiB+M,EAAUnG,KAIsC,OAArEiG,GAAyBC,EAAe7P,KAAK4C,QAAQmN,kBAAuB,EAASH,EAAsB1L,KAAK2L,EAAcC,EAAUnG,MAC3IA,EAAOmG,GAIT,IAAI9D,EAAewC,EAAaxO,KAAK4C,OAAQ+G,GAE7C3J,KAAK4O,SAAS,CACZ/B,KAAMQ,EAAW1B,QACjBhC,KAAMA,EACNqC,aAAcA,EACd5B,UAAsB,MAAXvH,OAAkB,EAASA,EAAQuH,WAElD,EAMAjD,EAAOqC,MAAQ,WACbpJ,EAAQG,KAAK,yEACbP,KAAK6H,QACP,EAEAV,EAAOU,OAAS,WACd7H,KAAKyG,WAAWuJ,YAAYhQ,KAC9B,EAEAmH,EAAO8I,QAAU,WACfjQ,KAAKiP,iBACLjP,KAAKyP,uBACLzP,KAAKmP,QACP,EAEAhI,EAAO+I,SAAW,WAChB,OAAOlQ,KAAK8J,UAAUpI,MAAK,SAAUsN,GACnC,OAAOA,EAASpM,OAAOuC,OACzB,GACF,EAEAgC,EAAOQ,QAAU,WACf,OAAO3H,KAAKkL,MAAMuD,eAAiBzO,KAAKkL,MAAMC,SAAWtL,EAAY8L,SAAW3L,KAAK8J,UAAUpI,MAAK,SAAUsN,GAC5G,OAAOA,EAAS1F,mBAAmB3B,OACrC,GACF,EAEAR,EAAOuF,cAAgB,SAAuBpG,GAK5C,YAJkB,IAAdA,IACFA,EAAY,GAGPtG,KAAKkL,MAAMuD,eAAiBzO,KAAKkL,MAAMC,SAAWtL,EAAY8L,SAAW3L,KAAKkL,MAAMd,UAAY9D,GAAa4D,KAAKC,KAC3H,EAEAhD,EAAOgJ,cAAgB,SAAuBtD,GAG5C,IAAIuD,EAAgBpQ,KAAK8J,UAAUuG,MAAK,SAAUrB,GAChD,IAAIpM,EAASoM,EAASpM,OAGlB+E,EADwBqH,EAAS1F,mBACD3B,QAEpC,OAAO/E,EAAOuC,UAAqB,UAAT0H,IAAqD,WAAhCjK,EAAOmD,sBAAqCnD,EAAOmD,sBAAwB4B,IAAqB,WAATkF,IAAoD,WAA9BjK,EAAOkD,oBAAmClD,EAAOkD,oBAAsB6B,GACrO,IAEIyI,GACFA,EAAc5H,QAIhBxI,KAAKsP,UACP,EAMAnI,EAAOgB,UAAY,SAAmBC,GACpC,IAAI4G,EAAW,IAAItH,EAAc1H,KAAK4C,QAEtC,OADAoM,EAAS7G,UAAUC,GACZ4G,CACT,EAEA7H,EAAOmB,kBAAoB,SAA2B0G,GACpDhP,KAAK8J,UAAUtC,KAAKwH,GAEpBhP,KAAKiP,gBACP,EAEA9H,EAAOyB,oBAAsB,SAA6BoG,GACxDhP,KAAK8J,UAAY9J,KAAK8J,UAAUwG,QAAO,SAAUC,GAC/C,OAAOA,IAAMvB,CACf,IAEKhP,KAAK8J,UAAU1G,SAGdpD,KAAKwQ,uBACPxQ,KAAKmP,SAGPnP,KAAK2O,aAET,EAEAxH,EAAOsJ,WAAa,WACbzQ,KAAKkL,MAAMuD,eACdzO,KAAK4O,SAAS,CACZ/B,KAAMQ,EAAWG,YAGvB,EAMArG,EAAOY,QAAU,SAAiBlF,EAASD,GACzC,IAAIwM,EAAUpP,KAAKwI,WAAMzG,EAAWa,GAMpC,OAJiB,MAAXC,OAAkB,EAASA,EAAQ6N,gBACvCtB,EAAUA,EAAQxK,MAAMzE,IAGnBiP,CACT,EAMAjI,EAAOa,UAAY,SAAmByB,EAAmB5G,EAASD,GAChE,OAAO5C,KAAKwI,MAAM,CAChBR,UAAW,CACTyB,kBAAmBA,EACnBkH,UAAsB,MAAX9N,OAAkB,EAASA,EAAQ8N,YAAa,IAE5D/N,EACL,EAEAuE,EAAOqB,MAAQ,SAAe3F,EAASD,GACrC,IACE,IAAIgO,GAAS,EAETC,EAAS7Q,KAEb,OAAO2N,GAAQ,WACb,GAAIkD,EAAOzB,QACT,OACkB,MAAXvM,OAAkB,EAASA,EAAQmF,YAAc6I,EAAO3F,MAAMvB,KAE1D8D,EAAcoD,EAAO1B,QAAO,KAGnCyB,GAAS,EACFC,EAAOzB,QAItB,IAAG,SAAU0B,GACX,GAAIF,EAAQ,OAAOE,EAGflO,GACFiO,EAAOhI,aAAajG,GAKtB,IAAI0N,GAFJ1N,EAASiO,EAAOjO,QAEImO,oBAChBC,EAASV,EAASA,EAAOO,EAAOnO,UAAYmO,EAAOnO,SA2CvD,OA1CAmO,EAAOzB,QAAUnB,GAAO,WACtB,OAAOH,GAAO,WACZ,IAAInE,EACJ,OAAOgE,GAAQ,WACb,OAAI/K,EAAOqO,SACFpD,EAAOgD,EAAOK,mBAAmBtO,EAAQoO,EAAQnO,IAAU,SAAUsO,GAC1ExH,EAAOwH,CACT,IAEOtD,EAAOgD,EAAOO,WAAWxO,EAAQoO,EAAQnO,IAAU,SAAUwO,GAClE1H,EAAO0H,CACT,GAEJ,IAAG,WAOD,OALAR,EAAOlB,QAAQhG,UAGRkH,EAAOzB,QAEPzF,CACT,GACF,IAAG,SAAUrJ,GAiBX,MAfM6D,EAAiB7D,IAAUA,EAAMP,QACrC8Q,EAAOjC,SAAS,CACd/B,KAAMQ,EAAWtM,MACjBT,MAAOA,IAKN6D,EAAiB7D,IACpBF,EAAQE,MAAMA,UAITuQ,EAAOzB,QAER9O,CACR,GACF,GAzCiB2N,GA0CV4C,EAAOzB,OAChB,GACF,CAAE,MAAOpB,GACP,OAAOvJ,QAAQY,OAAO2I,EACxB,CACF,EAEA7G,EAAOiK,WAAa,SAAoBxO,EAAQoO,EAAQM,GActD,OAPKtR,KAAKkL,MAAMkB,YACdpM,KAAK4O,SAAS,CACZ/B,KAAMQ,EAAWE,QAKdvN,KAAKuR,aAAa3O,GAZT,WACd,OAAOA,EAAOD,QAAQ0L,MAAMzL,EAAQoO,EACtC,GAWF,EAEA7J,EAAO+J,mBAAqB,SAA4BtO,EAAQoO,EAAQnO,GACtE,IAAImF,EAAuB,MAAXnF,OAAkB,EAASA,EAAQmF,UAE/CwJ,EAAOxJ,GAAa,CAAC,EACrB2I,EAAWa,EAAKb,SAChBlH,EAAoB+H,EAAK/H,kBAEzB4C,IAAiBrE,IAAY2I,EAAW,WAAa,QACrDc,EAAYzR,KAAKkL,MAAMvB,MAAQ,GAE/B+H,EAAYzD,GAAO,SAAU0D,EAAOC,EAASC,GAC/C,IAAIC,EAAWC,EAAYJ,EAAOC,GAMlC,MAJsB,qBAAXC,GAA8C,qBAAbC,GAA4BlP,EAAOoP,eAC7EH,EAASjP,EAAOoP,aAAaF,EAAUH,IAGlC9D,EAAOjL,EAAOD,QAAQ0L,MAAMzL,EAAQoO,EAAOiB,OAAO,CAACJ,MAAW,SAAUK,GAC7E,OAAON,EAAU,CAACM,GAAMD,OAAON,GAAS,GAAGM,OAAON,EAAO,CAACO,GAC5D,GACF,IA4BA,OARKlS,KAAKkL,MAAMkB,YAAcpM,KAAKkL,MAAMmB,iBAAmBA,GAC1DrM,KAAK4O,SAAS,CACZ/B,KAAMQ,EAAWE,MACjBlB,eAAgBA,IAKbrM,KAAKuR,aAAa3O,GAzBT,WACd,GAAIyJ,EACF,OAAOqF,EAAUD,EAAWd,EAAUlH,GACjC,GAAKgI,EAAUrO,OAEf,CAGL,IAFA,IAAIgM,EAAUsC,EAAU,IAEfjO,EAAI,EAAGA,EAAIgO,EAAUrO,OAAQK,IACpC2L,EAAUA,EAAQzK,KAAK+M,GAGzB,OAAOtC,CACT,CATE,OAAOsC,EAAU,GAUrB,GAYF,EAEAvK,EAAOoK,aAAe,SAAsB3O,EAAQyB,GAClD,IAAI8N,EAASnS,KAEb,OAAO,IAAIyE,SAAQ,SAAU2N,EAAcC,GACzC,IACIC,EACAC,EAFAC,GAAW,EAIXC,EAAO,WACTD,GAAW,SACJL,EAAO9C,mBACP8C,EAAO3C,qBACP2C,EAAO3B,sBAEE,MAAhB8B,GAAgCA,GAClC,EAOIjN,EAAS,SAAgBvE,GAC3B2R,IACAJ,EAAYvR,EACd,EAGAqR,EAAO9C,YAAc,SAAUtP,GAC7BsF,EAAO,IAAIvF,EAAeC,IACP,MAAnBwS,GAAmCA,GACrC,EAGAJ,EAAO3C,cAAgB,WACL,MAAhB8C,GAAgCA,GAClC,EAGA,IAAII,EAAMzE,GAAO,WACf,OAAOH,GAAO,WAEZ,IJjUmBhN,EIiUf6R,EAAiBtO,IAarB,MJ7UkD,oBAAlC,OADGvD,EImUF6R,QJlUM,EAAS7R,EAAMqO,UImUpCoD,EAAkB,WAChB,IACEI,EAAexD,QACjB,CAAE,MAAOvJ,GAAU,CACrB,EAEAuM,EAAO3B,uBAAwB,GAI1B3C,EAAO8E,GAAgB,SAAUC,IAtC9B,SAAiB9R,GAC7B2R,IACAL,EAAatR,EACf,CAoCM4D,CAAQkO,EACV,GACF,IAAG,SAAUtS,GAEX,IAAIkS,EAAJ,CAKA,IJ/UYlI,EI+UR2B,EAAekG,EAAOjH,MAAMe,aAC5BjG,EAAQpD,EAAOoD,MACfC,EAAarD,EAAOqD,WAGxB,IAF4B,IAAVD,GAAkBiG,EAAejG,GAA0B,oBAAVA,GAAwBA,EAAMiG,EAAc3L,GAc/G,OALA6R,EAAOvD,SAAS,CACd/B,KAAMQ,EAAWC,SAIZO,GJhWKvD,EIgWQ7J,EAAiBwF,EAAYgG,IAAiB,EJ/VnE,IAAIxH,SAAQ,SAAUC,GAC3BG,WAAWH,EAAS4F,EACtB,MI6V8E,WAEpE,OAAOqD,GAAQ,WACb,IAAK9L,MAAwBK,IAC3B,OAAOuL,EAAc,IAAIhJ,SAAQ,SAAUoO,GACzCP,EAAeO,CACjB,IAEJ,IAAG,WACIL,GACHE,GAEJ,GACF,IAvBErN,EAAO/E,EAVT,CAkCF,GACF,IAGAoS,GACF,GACF,EAEOpE,CACT,CAtegC,GAwehC,SAASyD,EAAYJ,EAAOhB,GAC1B,OAAOA,EAAWgB,EAAM,GAAKA,EAAMA,EAAMvO,OAAS,EACpD,CAEA,SAASoL,EAAa5L,EAAQ+O,EAAOhB,GACnC,GAAI/N,EAAOqO,UAAYrO,EAAOoP,cAAgB/O,MAAMC,QAAQyO,GAC1D,OAAO3I,QAAQpG,EAAOoP,aAAaD,EAAYJ,EAAOhB,GAAWgB,GAErE,CCjjBO,IAAImB,EAA0B,WACnC,SAASA,EAAWlQ,GAClB5C,KAAK4C,OAASA,GAAU,CAAC,EACzB5C,KAAK0K,gBAAkB,GACvB1K,KAAKiF,QAAU,CAAC,EAChBjF,KAAK+S,aAAe,GACpB/S,KAAKoM,WAAa,CACpB,CAEA,IAAIjF,EAAS2L,EAAW/O,UA6SxB,OA3SAoD,EAAOgG,sBAAwB,SAA+Bb,GAC5D,IAAIvC,EAAQ/J,KAEZA,KAAKoM,WAAapM,KAAKgT,aAAa5R,QAAO,SAAU6R,EAAKC,GACxD,OAAOA,EAAEhI,MAAMkB,WAAa6G,EAAM,EAAIA,CACxC,GAAG,GACHlM,EAAcK,OAAM,WAClB2C,EAAMW,gBAAgBjD,SAAQ,SAAUW,GACtCrB,EAAcO,UAAS,WACrBc,EAAS2B,EAAOuC,EAClB,GACF,GACF,GACF,EAEAnF,EAAOP,iBAAmB,WACxB,OAAO5G,KAAK4C,OAAOuQ,aACrB,EAEAhM,EAAOX,uBAAyB,SAAgC9D,EAAUE,GACxE,OAAOwQ,EAAwBpT,KAAM0C,OAAUX,EAAWa,EAC5D,EAEAuE,EAAOgB,UAAY,SAAmBC,GACpC,IAAIuC,EAAS3K,KAGb,OADAA,KAAK0K,gBAAgBlD,KAAKY,GACnB,WACLuC,EAAOD,gBAAkBC,EAAOD,gBAAgB4F,QAAO,SAAUC,GAC/D,OAAOA,IAAMnI,CACf,GACF,CACF,EAEAjB,EAAOqC,MAAQ,SAAe3G,GAC5B7C,KAAKqT,iBAEU,MAAXxQ,OAAkB,EAASA,EAAQ0E,SACrCvH,KAAKmN,uBAET,EAEAhG,EAAO6L,WAAa,SAAoBM,EAAWzQ,GACjD,IAMI0Q,EANAC,GAAuB,IAAdF,GAA2C,qBAAdA,EAE1C,GAAIE,IAAW3Q,EACb,OAAO7C,KAAK+S,aAKd,GAAyB,oBAAdO,EACTC,EAAcD,MACT,CACL,IAAI9B,EAAO3O,GAAW,CAAC,EACnB4Q,EAAQjC,EAAKiC,MACbC,EAASlC,EAAKkC,OACdC,EAAQnC,EAAKmC,MAEb9M,EAAiB7G,KAAKwG,uBAAuB8M,GAEjDC,EAAc,SAAqBjH,GAEjC,IAAKkH,EACH,GAAIC,GAEF,GAAInH,EAAM9G,YAAcqB,EAAerB,UACrC,OAAO,OAIT,IAAKjE,EAAa+K,EAAM5J,SAAUmE,EAAenE,UAC/C,OAAO,EAMb,OAAsB,mBAAXgR,GAAwBpH,EAAM4D,aAAewD,KAKnC,mBAAVC,GAAuBrH,EAAM3E,YAAcgM,EAKxD,CACF,CAEA,OAAO3T,KAAK+S,aAAazC,OAAOiD,EAClC,EAEApM,EAAOyM,SAAW,SAAkBN,GAClC,OAAOtT,KAAKgT,WAAWM,EAAW,CAChCG,OAAO,IACN,EACL,EAEAtM,EAAOoF,eAAiB,SAAwB/G,GAC9C,OAAOxF,KAAKiF,QAAQO,EACtB,EAEA2B,EAAO0M,aAAe,SAAsBP,GAC1C,IAAIQ,EAEJ,OAAsD,OAA9CA,EAAiB9T,KAAK4T,SAASN,SAAsB,EAASQ,EAAe5I,MAAMvB,IAC7F,EAEAxC,EAAO6I,YAAc,SAAqB1D,GACpCtM,KAAKiF,QAAQqH,EAAM9G,aACrB8G,EAAM2D,iBACCjQ,KAAKiF,QAAQqH,EAAM9G,WAC1BxF,KAAK+S,aAAe/S,KAAK+S,aAAazC,QAAO,SAAUC,GACrD,OAAOA,IAAMjE,CACf,IACAtM,KAAKmN,sBAAsBb,GAE/B,EAEAnF,EAAOkM,cAAgB,SAAuBC,EAAWzQ,GACvD,IAAIkR,EAAS/T,KAEbA,KAAKgT,WAAWM,EAAWzQ,GAAS4E,SAAQ,SAAU6E,GACpDyH,EAAO/D,YAAY1D,EACrB,GACF,EAEAnF,EAAO6M,cAAgB,SAAuBV,EAAWzQ,GACvD7C,KAAKgT,WAAWM,EAAWzQ,GAAS4E,SAAQ,SAAU6E,GACpDA,EAAM6C,QACR,GACF,EAMAhI,EAAO8M,kBAAoB,SAA2BX,EAAWzQ,GAC/D,IAAIoC,EAAUjF,KAAKgT,WAAWM,EAAWzQ,GACzCkE,EAAcK,OAAM,WAClBnC,EAAQwC,SAAQ,SAAU6E,GACxBA,EAAMmE,YACR,GACF,IAEA,IAAIyD,EAAQrR,GAAW,CAAC,EACpBsR,EAAsBD,EAAME,cAC5BA,OAAwC,IAAxBD,GAAwCA,EACxDE,EAAwBH,EAAMI,gBAC9BA,OAA4C,IAA1BD,GAA2CA,EAEjE,IAAKC,IAAoBF,EACvB,OAAO3P,QAAQC,QAAQO,GAGzB,IAAIsP,GAAiBzR,EAAAA,EAAAA,GAAS,CAAC,EAAGD,GAE9BuR,IAAkBE,EACpBC,EAAeb,QAAS,EACfY,IAAoBF,IAC7BG,EAAeb,QAAS,GAG1B,IAAItE,EAAUpP,KAAKwU,eAAelB,EAAWiB,GAQ7C,OANiB,MAAX1R,OAAkB,EAASA,EAAQ6N,gBACvCtB,EAAUA,EAAQxK,OAAM,WACtB,OAAOK,CACT,KAGKmK,EAAQzK,MAAK,WAClB,OAAOM,CACT,GACF,EAMAkC,EAAOqN,eAAiB,SAAwBlB,EAAWzQ,GACzD,IAAIgO,EAAS7Q,KAETyU,EAAW,GAgBf,OAfA1N,EAAcK,OAAM,WAClByJ,EAAOmC,WAAWM,EAAWzQ,GAAS4E,SAAQ,SAAU6E,GACtD,IAAI8C,EAAU9C,EAAM9D,QAAQ7D,MAAK,WAC/B,OAAO2H,CACT,KAEiB,MAAXzJ,OAAkB,EAASA,EAAQ6N,gBACvCtB,EAAUA,EAAQxK,OAAM,WACtB,OAAO0H,CACT,KAGFmI,EAASjN,KAAK4H,EAChB,GACF,IACO3K,QAAQiQ,IAAID,EACrB,EAEAtN,EAAOwN,qBAAuB,WAC5B3U,KAAKgT,aAAavL,SAAQ,SAAU6E,GAClCA,EAAMpB,MAAM4D,sBAAuB,CACrC,GACF,EAEA3H,EAAOyN,WAAa,SAAoBlS,EAAUE,GAChD,IAAIiE,EAAiB7G,KAAKwG,uBAAuB9D,EAAUE,GACvD0J,EAAQtM,KAAKuM,eAAe1F,EAAerB,WAM/C,OAJK8G,IACHA,EAAQtM,KAAKwM,YAAY3F,IAGpByF,CACT,EAEAnF,EAAOqF,YAAc,SAAqB5J,GACxC,IAAI0J,EAAQ,IAAIgC,EAAM1L,GAQtB,OANK5C,KAAK4C,OAAOiS,SACf7U,KAAKiF,QAAQqH,EAAM9G,WAAa8G,EAChCtM,KAAK+S,aAAavL,KAAK8E,GACvBtM,KAAKmN,sBAAsBb,IAGtBA,CACT,EAIAnF,EAAO2N,WAAa,SAAoBxS,EAAMC,EAAMC,GAClD,IAAIuS,EAAgB1S,EAAaC,EAAMC,EAAMC,GACzCE,EAAWqS,EAAc,GACzBnS,EAASmS,EAAc,GAEvBlO,EAAiB7G,KAAKwG,uBAAuB9D,GAAUI,EAAAA,EAAAA,GAAS,CAElEkD,OAAO,GACNpD,IACC0J,EAAQtM,KAAKuM,eAAe1F,EAAerB,WAM/C,OAJK8G,IACHA,EAAQtM,KAAKwM,YAAY3F,IAGtByF,EAAMI,cAAc9J,EAAO0D,WAIzBgG,EAAM9D,WAAMzG,EAAW8E,GAHrBpC,QAAQC,QAAQ4H,EAAMpB,MAAMvB,KAIvC,EAIAxC,EAAO6N,cAAgB,SAAuB1S,EAAMC,EAAMC,EAAMC,GAC1DzB,EAAcuB,KAAUA,EAAKyB,eAAe,iBAAmBzB,EAAKyB,eAAe,YACrFvB,EAAOF,EACPA,OAAOR,EACPS,OAAOT,GAGT,IAAIkT,EAAiB5S,EAAaC,EAAMC,EAAMC,EAAMC,GAChDC,EAAWuS,EAAe,GAC1BrS,EAASqS,EAAe,GACxBpS,EAAUoS,EAAe,IAEd,MAAXpS,OAAkB,EAASA,EAAQqS,SACrCtS,EAAO0D,UAAY,GAGrB,IAAI8I,EAAUpP,KAAK8U,WAAWpS,EAAUE,GAMxC,OAJiB,MAAXC,OAAkB,EAASA,EAAQ6N,gBACvCtB,EAAUA,EAAQxK,MAAMzE,IAGnBiP,CACT,EAIAjI,EAAOgO,WAAa,SAAoB7S,EAAMC,EAAMC,GAClD,IAAI4S,EAAiB/S,EAAaC,EAAMC,EAAMC,GAC1CE,EAAW0S,EAAe,GAC1BxS,EAASwS,EAAe,GAExBvO,EAAiB7G,KAAKwG,uBAAuB9D,EAAUE,GAC3D,OAAO,IAAI8E,EAAcb,EAC3B,EAEAM,EAAOkO,aAAe,SAAsB3S,EAAUhC,EAASkC,GAC7D5C,KAAK4U,WAAWlS,EAAUE,GAAQ+M,QAAQjP,EAC5C,EAEOoS,CACT,CAvTqC,GAwTjCwC,EAAoB,IAAIxC,EAAW,CACrC+B,OAAQ5U,IAGCsV,EAAc,CAACD,GAQnB,SAASE,EAA2B3I,GACrChL,KAAuBK,KACzB6E,EAAcK,OAAM,WAClBmO,EAAY9N,SAAQ,SAAUhB,GAC5BA,EAAWuM,aAAavL,SAAQ,SAAU6E,GACxCA,EAAM6D,cAActD,EACtB,GACF,GACF,GAEJ,CCpV6BzI,GAAiB,WAC5C,OAAOoR,EAA2B,QACpC,GACAC,EAAgB,SAAUC,GACxB,IAAIC,EAEJ,IAAI1V,IAAoC,OAArB0V,EAAUzV,aAAkB,EAASyV,EAAQC,kBAOhE,OAFA1V,OAAO0V,iBAAiB,mBAAoBF,GAAa,GACzDxV,OAAO0V,iBAAiB,QAASF,GAAa,GACvC,WAELxV,OAAO2V,oBAAoB,mBAAoBH,GAC/CxV,OAAO2V,oBAAoB,QAASH,EACtC,CACF,IClB8BtR,GAAiB,WAC7C,OAAOoR,EAA2B,SACpC,GACAM,EAAiB,SAAUC,GACzB,IAAIJ,EAEJ,IAAI1V,IAAoC,OAArB0V,EAAUzV,aAAkB,EAASyV,EAAQC,kBAMhE,OADA1V,OAAO0V,iBAAiB,SAAUG,GAAc,GACzC,WAEL7V,OAAO2V,oBAAoB,SAAUE,EACvC,CACF,I,ICjBWC,E,OAA0BC,wB,QCCjCC,EAAiCC,EAAAA,cAAoBb,GAC9Cc,EAAgB,WACzB,OAAOD,EAAAA,WAAiBD,EAC1B,ECHIG,EAA6BF,EAAAA,mBAAoBpU,GAC9C,SAASuU,IACd,OAAOH,EAAAA,WAAiBE,EAC1B,CCHA,SAASE,IACP,IAAIC,GAAW,EACf,MAAO,CACLC,WAAY,WACVD,GAAW,CACb,EACAE,MAAO,WACLF,GAAW,CACb,EACAG,QAAS,WACP,OAAOH,CACT,EAEJ,CAEA,IAAII,EAAuBT,EAAAA,cAAoBI,KAEpCM,EAAwB,WACjC,OAAOV,EAAAA,WAAiBS,EAC1B,ECnBO,SAASE,IACd,IAAIC,EAAaZ,EAAAA,QAAa,GAC1Ba,EAAYb,EAAAA,aAAkB,WAChC,OAAOY,EAAWE,OACpB,GAAG,IAOH,OANAd,EAAMlW,EAAW,YAAc,oBAAmB,WAEhD,OADA8W,EAAWE,SAAU,EACd,WACLF,EAAWE,SAAU,CACvB,CACF,GAAG,IACID,CACT,CCVO,SAASE,EAAS5U,EAAMC,EAAMC,GACnC,IAAIuS,EAAgB1S,EAAaC,EAAMC,EAAMC,GAI7C,OCFK,SAAsBE,EAAUE,GACrC,IAGIuU,EAHoBhB,EAAAA,YAAiB,SAAUiB,GACjD,OAAOA,EAAI,CACb,GAAG,GAC8B,GAE7BJ,EAAYF,IACZO,EAAQjB,IACR1P,EAAgB4P,IAChBgB,EAAqBT,IAErBhQ,EAAiBL,EAAuB6Q,EAAO3U,EAAUgE,EAAe9D,GAExE2U,EAAcpB,EAAAA,SACdqB,GAAeD,EAAYN,QAC3BjI,EAAWuI,EAAYN,SAAW,IAAIvP,EAAcb,GACxD0Q,EAAYN,QAAUjI,EAEtBmH,EAAAA,WAAgB,WAEd,OADAmB,EAAmBb,aACZzH,EAAS7G,WAAU,WACpB6O,KACFG,GAEJ,GACF,GAAG,CAACH,EAAWhI,EAAUmI,EAAUG,IAE9BE,GACHxI,EAASnG,aAAahC,GAGxB,IAAIxF,EAAS2N,EAAS1F,mBAEtB,GAAIzC,EAAe+C,UAAY/C,EAAe4Q,iBAAkB,CAC9D,IAAInL,EAAQ0C,EAAS3F,kBAErB,GAAIhI,EAAOuK,UAAY0L,EAAmBX,WAAarK,EAAMpB,MAAM4D,qBACjE,MAAMzN,EAAOf,MAGf,GAAIuG,EAAe1B,SAAW0B,EAAe+C,WAAavI,EAAOmK,UAAW,CAC1E8L,EAAmBb,aACnB,IAAIxO,EAAc+G,EAAS7G,YAC3B,MAAM6G,EAASxG,QAAQkP,QAAQzP,EACjC,CACF,CAEA,OAAO5G,CACT,CD9CSsW,CAHQ5C,EAAc,GAChBA,EAAc,GAG7B,Cb4NEjQ,EepOgBkR,C","sources":["../node_modules/react-query/es/core/types.js","../node_modules/react-query/es/core/utils.js","../node_modules/react-query/es/core/config.js","../node_modules/react-query/es/core/notifyManager.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/core/query.js","../node_modules/react-query/es/core/queryCache.js","../node_modules/react-query/es/core/setFocusHandler.js","../node_modules/react-query/es/core/setOnlineHandler.js","../node_modules/react-query/es/react/reactBatchedUpdates.js","../node_modules/react-query/es/react/ReactQueryCacheProvider.js","../node_modules/react-query/es/react/ReactQueryConfigProvider.js","../node_modules/react-query/es/react/ReactQueryErrorResetBoundary.js","../node_modules/react-query/es/react/utils.js","../node_modules/react-query/es/react/useQuery.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/index.js"],"sourcesContent":["export var QueryStatus;\n\n(function (QueryStatus) {\n  QueryStatus[\"Idle\"] = \"idle\";\n  QueryStatus[\"Loading\"] = \"loading\";\n  QueryStatus[\"Error\"] = \"error\";\n  QueryStatus[\"Success\"] = \"success\";\n})(QueryStatus || (QueryStatus = {}));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { QueryStatus } from './types'; // TYPES\n\nexport var CancelledError = function CancelledError(silent) {\n  this.silent = silent;\n}; // UTILS\n\nvar _uid = 0;\nexport function uid() {\n  return _uid++;\n}\nexport var isServer = typeof window === 'undefined';\nexport function noop() {\n  return undefined;\n}\nexport var Console = console || {\n  error: noop,\n  warn: noop,\n  log: noop\n};\nexport function setConsole(c) {\n  Console = c;\n}\nexport function functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\n\nfunction stableStringifyReplacer(_key, value) {\n  if (typeof value === 'function') {\n    throw new Error();\n  }\n\n  if (isPlainObject(value)) {\n    return Object.keys(value).sort().reduce(function (result, key) {\n      result[key] = value[key];\n      return result;\n    }, {});\n  }\n\n  return value;\n}\n\nexport function stableStringify(value) {\n  return JSON.stringify(value, stableStringifyReplacer);\n}\nexport function deepIncludes(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (typeof a === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !deepIncludes(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\nexport function isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function isDocumentVisible() {\n  // document global can be unavailable in react native\n  if (typeof document === 'undefined') {\n    return true;\n  }\n\n  return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n}\nexport function isOnline() {\n  return navigator.onLine === undefined || navigator.onLine;\n}\nexport function getQueryArgs(arg1, arg2, arg3, arg4) {\n  var queryKey;\n  var queryFn;\n  var config;\n  var options;\n\n  if (isPlainObject(arg1)) {\n    queryKey = arg1.queryKey;\n    queryFn = arg1.queryFn;\n    config = arg1.config;\n    options = arg2;\n  } else if (isPlainObject(arg2)) {\n    queryKey = arg1;\n    config = arg2;\n    options = arg3;\n  } else {\n    queryKey = arg1;\n    queryFn = arg2;\n    config = arg3;\n    options = arg4;\n  }\n\n  config = config || {};\n\n  if (queryFn) {\n    config = _extends({}, config, {\n      queryFn: queryFn\n    });\n  }\n\n  return [queryKey, config, options];\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nexport function replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nexport function isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nexport function isError(value) {\n  return value instanceof Error;\n}\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nexport function sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\nexport function getStatusProps(status) {\n  return {\n    status: status,\n    isLoading: status === QueryStatus.Loading,\n    isSuccess: status === QueryStatus.Success,\n    isError: status === QueryStatus.Error,\n    isIdle: status === QueryStatus.Idle\n  };\n}\nexport function createSetHandler(fn) {\n  var removePreviousHandler;\n  return function (callback) {\n    // Unsub the old handler\n    if (removePreviousHandler) {\n      removePreviousHandler();\n    } // Sub the new handler\n\n\n    removePreviousHandler = callback(fn);\n  };\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nexport function scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}\n\n// Default to a dummy \"batch\" implementation that just runs the callback\nvar batchedUpdates = function batchedUpdates(callback) {\n  callback();\n}; // Allow injecting another batching function later\n\n\nexport function setBatchedUpdates(fn) {\n  batchedUpdates = fn;\n} // Supply a getter just to skip dealing with ESM bindings\n\nexport function getBatchedUpdates() {\n  return batchedUpdates;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { stableStringify } from './utils';\n// CONFIG\nexport var defaultQueryKeySerializerFn = function defaultQueryKeySerializerFn(queryKey) {\n  try {\n    var arrayQueryKey = Array.isArray(queryKey) ? queryKey : [queryKey];\n    var queryHash = stableStringify(arrayQueryKey);\n    arrayQueryKey = JSON.parse(queryHash);\n    return [queryHash, arrayQueryKey];\n  } catch (_unused) {\n    throw new Error('A valid query key is required!');\n  }\n};\n/**\n * Config merging strategy\n *\n * When using hooks the config will be merged in the following order:\n *\n * 1. These defaults.\n * 2. Defaults from the hook query cache.\n * 3. Combined defaults from any config providers in the tree.\n * 4. Query/mutation config provided to the hook.\n *\n * When using a query cache directly the config will be merged in the following order:\n *\n * 1. These defaults.\n * 2. Defaults from the query cache.\n * 3. Query/mutation config provided to the query cache method.\n */\n\nexport var DEFAULT_CONFIG = {\n  queries: {\n    cacheTime: 5 * 60 * 1000,\n    enabled: true,\n    notifyOnStatusChange: true,\n    queryFn: function queryFn() {\n      return Promise.reject();\n    },\n    queryKeySerializerFn: defaultQueryKeySerializerFn,\n    refetchOnMount: true,\n    refetchOnReconnect: true,\n    refetchOnWindowFocus: true,\n    retry: 3,\n    retryDelay: function retryDelay(attemptIndex) {\n      return Math.min(1000 * Math.pow(2, attemptIndex), 30000);\n    },\n    staleTime: 0,\n    structuralSharing: true\n  }\n};\nexport function getDefaultReactQueryConfig() {\n  return {\n    queries: _extends({}, DEFAULT_CONFIG.queries),\n    mutations: _extends({}, DEFAULT_CONFIG.mutations)\n  };\n}\nexport function mergeReactQueryConfigs(a, b) {\n  return {\n    shared: _extends({}, a.shared, b.shared),\n    queries: _extends({}, a.queries, b.queries),\n    mutations: _extends({}, a.mutations, b.mutations)\n  };\n}\nexport function getResolvedQueryConfig(queryCache, queryKey, contextConfig, config) {\n  var queryCacheConfig = queryCache.getDefaultConfig();\n\n  var resolvedConfig = _extends({}, DEFAULT_CONFIG.queries, queryCacheConfig == null ? void 0 : queryCacheConfig.shared, queryCacheConfig == null ? void 0 : queryCacheConfig.queries, contextConfig == null ? void 0 : contextConfig.shared, contextConfig == null ? void 0 : contextConfig.queries, config);\n\n  var result = resolvedConfig.queryKeySerializerFn(queryKey);\n  resolvedConfig.queryCache = queryCache;\n  resolvedConfig.queryHash = result[0];\n  resolvedConfig.queryKey = result[1];\n  return resolvedConfig;\n}\nexport function isResolvedQueryConfig(config) {\n  return Boolean(config.queryHash);\n}\nexport function getResolvedMutationConfig(queryCache, contextConfig, config) {\n  var queryCacheConfig = queryCache.getDefaultConfig();\n  return _extends({}, DEFAULT_CONFIG.mutations, queryCacheConfig == null ? void 0 : queryCacheConfig.shared, queryCacheConfig == null ? void 0 : queryCacheConfig.mutations, contextConfig == null ? void 0 : contextConfig.shared, contextConfig == null ? void 0 : contextConfig.mutations, config);\n}","import { getBatchedUpdates, scheduleMicrotask } from './utils'; // TYPES\n\n// CLASS\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    this.transactions++;\n    var result = callback();\n    this.transactions--;\n\n    if (!this.transactions) {\n      this.flush();\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(notify) {\n    if (this.transactions) {\n      this.queue.push(notify);\n    } else {\n      scheduleMicrotask(function () {\n        notify();\n      });\n    }\n  };\n\n  _proto.flush = function flush() {\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        var batchedUpdates = getBatchedUpdates();\n        batchedUpdates(function () {\n          queue.forEach(function (notify) {\n            notify();\n          });\n        });\n      });\n    }\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getStatusProps, isDocumentVisible, isServer, isValidTimeout, noop } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { DEFAULT_CONFIG, isResolvedQueryConfig } from './config';\nexport var QueryObserver = /*#__PURE__*/function () {\n  function QueryObserver(config) {\n    this.config = config;\n    this.isStale = true;\n    this.initialUpdateCount = 0; // Bind exposed methods\n\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n    this.fetchMore = this.fetchMore.bind(this);\n    this.unsubscribe = this.unsubscribe.bind(this); // Subscribe to the query\n\n    this.updateQuery();\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.subscribe = function subscribe(listener) {\n    this.listener = listener || noop;\n    this.currentQuery.subscribeObserver(this);\n\n    if (this.config.enabled && (this.config.forceFetchOnMount || this.config.refetchOnMount === 'always')) {\n      this.fetch();\n    } else {\n      this.optionalFetch();\n    }\n\n    this.updateTimers();\n    return this.unsubscribe;\n  };\n\n  _proto.unsubscribe = function unsubscribe() {\n    this.listener = undefined;\n    this.clearTimers();\n    this.currentQuery.unsubscribeObserver(this);\n  };\n\n  _proto.updateConfig = function updateConfig(config) {\n    var prevConfig = this.config;\n    var prevQuery = this.currentQuery;\n    this.config = isResolvedQueryConfig(config) ? config : this.config.queryCache.getResolvedQueryConfig(this.config.queryKey, config);\n    this.updateQuery(); // Take no further actions if there is no subscriber\n\n    if (!this.listener) {\n      return;\n    } // If we subscribed to a new query, optionally fetch and update refetch\n\n\n    if (this.currentQuery !== prevQuery) {\n      this.optionalFetch();\n      this.updateTimers();\n      return;\n    } // Optionally fetch if the query became enabled\n\n\n    if (config.enabled && !prevConfig.enabled) {\n      this.optionalFetch();\n    } // Update stale interval if needed\n\n\n    if (config.enabled !== prevConfig.enabled || config.staleTime !== prevConfig.staleTime) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (config.enabled !== prevConfig.enabled || config.refetchInterval !== prevConfig.refetchInterval) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  }\n  /**\n   * @deprecated\n   */\n  ;\n\n  _proto.clear = function clear() {\n    this.remove();\n  };\n\n  _proto.remove = function remove() {\n    this.currentQuery.remove();\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.currentQuery.refetch(options, this.config);\n  };\n\n  _proto.fetchMore = function fetchMore(fetchMoreVariable, options) {\n    return this.currentQuery.fetchMore(fetchMoreVariable, options, this.config).catch(noop);\n  };\n\n  _proto.fetch = function fetch() {\n    var _DEFAULT_CONFIG$queri;\n\n    // Never try to fetch if no query function has been set\n    if (this.config.queryFn === ((_DEFAULT_CONFIG$queri = DEFAULT_CONFIG.queries) == null ? void 0 : _DEFAULT_CONFIG$queri.queryFn)) {\n      return Promise.resolve(this.currentResult.data);\n    }\n\n    return this.currentQuery.fetch(undefined, this.config).catch(noop);\n  };\n\n  _proto.optionalFetch = function optionalFetch() {\n    if (this.config.enabled && // Only fetch if enabled\n    this.isStale && // Only fetch if stale\n    !(this.config.suspense && this.currentResult.isFetched) && ( // Don't refetch if in suspense mode and the data is already fetched\n    this.config.refetchOnMount || this.currentQuery.observers.length === 1)) {\n      this.fetch();\n    }\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this = this;\n\n    if (isServer) {\n      return;\n    }\n\n    this.clearStaleTimeout();\n\n    if (this.isStale || !isValidTimeout(this.config.staleTime)) {\n      return;\n    }\n\n    var timeElapsed = Date.now() - this.currentResult.updatedAt;\n    var timeUntilStale = this.config.staleTime - timeElapsed + 1;\n    var timeout = Math.max(timeUntilStale, 0);\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this.isStale) {\n        _this.isStale = true;\n\n        _this.updateResult();\n\n        _this.notify({\n          listener: true,\n          globalListeners: true\n        });\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this2 = this;\n\n    if (isServer) {\n      return;\n    }\n\n    this.clearRefetchInterval();\n\n    if (!this.config.enabled || !isValidTimeout(this.config.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this2.config.refetchIntervalInBackground || isDocumentVisible()) {\n        _this2.fetch();\n      }\n    }, this.config.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearInterval(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  };\n\n  _proto.updateResult = function updateResult() {\n    var _this$previousQueryRe;\n\n    var state = this.currentQuery.state;\n    var data = state.data,\n        status = state.status,\n        updatedAt = state.updatedAt;\n    var isPreviousData = false; // Keep previous data if needed\n\n    if (this.config.keepPreviousData && state.isInitialData && ((_this$previousQueryRe = this.previousQueryResult) == null ? void 0 : _this$previousQueryRe.isSuccess)) {\n      data = this.previousQueryResult.data;\n      updatedAt = this.previousQueryResult.updatedAt;\n      status = this.previousQueryResult.status;\n      isPreviousData = true;\n    }\n\n    this.currentResult = _extends({}, getStatusProps(status), {\n      canFetchMore: state.canFetchMore,\n      clear: this.remove,\n      data: data,\n      error: state.error,\n      failureCount: state.failureCount,\n      fetchMore: this.fetchMore,\n      isFetched: state.updateCount > 0,\n      isFetchedAfterMount: state.updateCount > this.initialUpdateCount,\n      isFetching: state.isFetching,\n      isFetchingMore: state.isFetchingMore,\n      isInitialData: state.isInitialData,\n      isPreviousData: isPreviousData,\n      isStale: this.isStale,\n      refetch: this.refetch,\n      remove: this.remove,\n      updatedAt: updatedAt\n    });\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var config = this.config;\n    var prevQuery = this.currentQuery;\n    var query = config.queryCache.getQueryByHash(config.queryHash);\n\n    if (!query) {\n      query = config.queryCache.createQuery(config);\n    }\n\n    if (query === prevQuery) {\n      return;\n    }\n\n    this.previousQueryResult = this.currentResult;\n    this.currentQuery = query;\n    this.initialUpdateCount = query.state.updateCount; // Update stale state on query switch\n\n    if (query.state.isInitialData) {\n      if (config.keepPreviousData && prevQuery) {\n        this.isStale = true;\n      } else if (typeof config.initialStale === 'function') {\n        this.isStale = config.initialStale();\n      } else if (typeof config.initialStale === 'boolean') {\n        this.isStale = config.initialStale;\n      } else {\n        this.isStale = typeof query.state.data === 'undefined';\n      }\n    } else {\n      this.isStale = query.isStaleByTime(config.staleTime);\n    }\n\n    this.updateResult();\n\n    if (this.listener) {\n      prevQuery == null ? void 0 : prevQuery.unsubscribeObserver(this);\n      this.currentQuery.subscribeObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var config = this.config;\n    var type = action.type; // Update stale state on success, error or invalidation\n\n    if (type === 2 || type === 3 || type === 4) {\n      this.isStale = this.currentQuery.isStaleByTime(config.staleTime);\n    } // Store current result and get new result\n\n\n    var prevResult = this.currentResult;\n    this.updateResult();\n    var currentResult = this.currentResult; // Update timers on success, error or invalidation\n\n    if (type === 2 || type === 3 || type === 4) {\n      this.updateTimers();\n    } // Do not notify if the query was invalidated but the stale state did not changed\n\n\n    if (type === 4 && currentResult.isStale === prevResult.isStale) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var notifyOptions = {};\n\n    if (type === 2) {\n      notifyOptions.onSuccess = true;\n    } else if (type === 3) {\n      notifyOptions.onError = true;\n    }\n\n    if ( // Always notify if notifyOnStatusChange is set\n    config.notifyOnStatusChange || // Otherwise only notify on data or error change\n    currentResult.data !== prevResult.data || currentResult.error !== prevResult.error) {\n      notifyOptions.listener = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.notify = function notify(options) {\n    var config = this.config,\n        currentResult = this.currentResult,\n        currentQuery = this.currentQuery,\n        listener = this.listener;\n    var onSuccess = config.onSuccess,\n        onSettled = config.onSettled,\n        onError = config.onError;\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (options.onSuccess) {\n        if (onSuccess) {\n          notifyManager.schedule(function () {\n            onSuccess(currentResult.data);\n          });\n        }\n\n        if (onSettled) {\n          notifyManager.schedule(function () {\n            onSettled(currentResult.data, null);\n          });\n        }\n      } else if (options.onError) {\n        if (onError) {\n          notifyManager.schedule(function () {\n            onError(currentResult.error);\n          });\n        }\n\n        if (onSettled) {\n          notifyManager.schedule(function () {\n            onSettled(undefined, currentResult.error);\n          });\n        }\n      } // Then trigger the listener\n\n\n      if (options.listener && listener) {\n        notifyManager.schedule(function () {\n          listener(currentResult);\n        });\n      } // Then the global listeners\n\n\n      if (options.globalListeners) {\n        config.queryCache.notifyGlobalListeners(currentQuery);\n      }\n    });\n  };\n\n  return QueryObserver;\n}();","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { CancelledError, Console, functionalUpdate, isCancelable, isCancelledError, isDocumentVisible, isOnline, isServer, isValidTimeout, noop, replaceEqualDeep, sleep } from './utils';\nimport { QueryStatus } from './types';\nimport { QueryObserver } from './queryObserver';\nimport { notifyManager } from './notifyManager'; // TYPES\n\nfunction _empty() {}\n\nvar ActionType = {\n  Failed: 0,\n  Fetch: 1,\n  Success: 2,\n  Error: 3,\n  Invalidate: 4\n};\n\n// CLASS\nfunction _awaitIgnored(value, direct) {\n  if (!direct) {\n    return value && value.then ? value.then(_empty) : Promise.resolve();\n  }\n}\n\nfunction _invoke(body, then) {\n  var result = body();\n\n  if (result && result.then) {\n    return result.then(then);\n  }\n\n  return then(result);\n}\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n\n  return result;\n}\n\nfunction _async(f) {\n  return function () {\n    for (var args = [], i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    try {\n      return Promise.resolve(f.apply(this, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport var Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.config = config;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.queryCache = config.queryCache;\n    this.cacheTime = config.cacheTime;\n    this.observers = [];\n    this.state = getDefaultState(config);\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.updateConfig = function updateConfig(config) {\n    this.config = config;\n    this.cacheTime = Math.max(this.cacheTime, config.cacheTime);\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this = this;\n\n    this.state = queryReducer(this.state, action);\n    notifyManager.batch(function () {\n      _this.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this.queryCache.notifyGlobalListeners(_this);\n    });\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this2 = this;\n\n    if (isServer) {\n      return;\n    }\n\n    this.clearGcTimeout();\n\n    if (this.observers.length > 0 || !isValidTimeout(this.cacheTime)) {\n      return;\n    }\n\n    this.gcTimeout = setTimeout(function () {\n      _this2.remove();\n    }, this.cacheTime);\n  };\n\n  _proto.cancel = function cancel(silent) {\n    var promise = this.promise;\n\n    if (promise && this.cancelFetch) {\n      this.cancelFetch(silent);\n      return promise.then(noop).catch(noop);\n    }\n\n    return Promise.resolve(undefined);\n  };\n\n  _proto.continue = function _continue() {\n    var _this$continueFetch;\n\n    (_this$continueFetch = this.continueFetch) == null ? void 0 : _this$continueFetch.call(this);\n  };\n\n  _proto.clearTimersObservers = function clearTimersObservers() {\n    this.observers.forEach(function (observer) {\n      observer.clearTimers();\n    });\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$config$isDataEq, _this$config;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = functionalUpdate(updater, prevData); // Structurally share data between prev and new data if needed\n\n    if (this.config.structuralSharing) {\n      data = replaceEqualDeep(prevData, data);\n    } // Use prev data if an isDataEqual function is defined and returns `true`\n\n\n    if ((_this$config$isDataEq = (_this$config = this.config).isDataEqual) == null ? void 0 : _this$config$isDataEq.call(_this$config, prevData, data)) {\n      data = prevData;\n    } // Try to determine if more data can be fetched\n\n\n    var canFetchMore = hasMorePages(this.config, data); // Set data and mark it as cached\n\n    this.dispatch({\n      type: ActionType.Success,\n      data: data,\n      canFetchMore: canFetchMore,\n      updatedAt: options == null ? void 0 : options.updatedAt\n    });\n  }\n  /**\n   * @deprecated\n   */\n  ;\n\n  _proto.clear = function clear() {\n    Console.warn('react-query: clear() has been deprecated, please use remove() instead');\n    this.remove();\n  };\n\n  _proto.remove = function remove() {\n    this.queryCache.removeQuery(this);\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.clearTimersObservers();\n    this.cancel();\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.config.enabled;\n    });\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || this.state.status !== QueryStatus.Success || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || this.state.status !== QueryStatus.Success || this.state.updatedAt + staleTime <= Date.now();\n  };\n\n  _proto.onInteraction = function onInteraction(type) {\n    // Execute the first observer which is enabled,\n    // stale and wants to refetch on this interaction.\n    var staleObserver = this.observers.find(function (observer) {\n      var config = observer.config;\n\n      var _observer$getCurrentR = observer.getCurrentResult(),\n          isStale = _observer$getCurrentR.isStale;\n\n      return config.enabled && (type === 'focus' && (config.refetchOnWindowFocus === 'always' || config.refetchOnWindowFocus && isStale) || type === 'online' && (config.refetchOnReconnect === 'always' || config.refetchOnReconnect && isStale));\n    });\n\n    if (staleObserver) {\n      staleObserver.fetch();\n    } // Continue any paused fetch\n\n\n    this.continue();\n  }\n  /**\n   * @deprectated\n   */\n  ;\n\n  _proto.subscribe = function subscribe(listener) {\n    var observer = new QueryObserver(this.config);\n    observer.subscribe(listener);\n    return observer;\n  };\n\n  _proto.subscribeObserver = function subscribeObserver(observer) {\n    this.observers.push(observer); // Stop the query from being garbage collected\n\n    this.clearGcTimeout();\n  };\n\n  _proto.unsubscribeObserver = function unsubscribeObserver(observer) {\n    this.observers = this.observers.filter(function (x) {\n      return x !== observer;\n    });\n\n    if (!this.observers.length) {\n      // If the transport layer does not support cancellation\n      // we'll let the query continue so the result can be cached\n      if (this.isTransportCancelable) {\n        this.cancel();\n      }\n\n      this.scheduleGc();\n    }\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: ActionType.Invalidate\n      });\n    }\n  }\n  /**\n   * @deprectated\n   */\n  ;\n\n  _proto.refetch = function refetch(options, config) {\n    var promise = this.fetch(undefined, config);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n  /**\n   * @deprectated\n   */\n  ;\n\n  _proto.fetchMore = function fetchMore(fetchMoreVariable, options, config) {\n    return this.fetch({\n      fetchMore: {\n        fetchMoreVariable: fetchMoreVariable,\n        previous: (options == null ? void 0 : options.previous) || false\n      }\n    }, config);\n  };\n\n  _proto.fetch = function fetch(options, config) {\n    try {\n      var _exit2 = false;\n\n      var _this4 = this;\n\n      return _invoke(function () {\n        if (_this4.promise) {\n          return function () {\n            if ((options == null ? void 0 : options.fetchMore) && _this4.state.data) {\n              // Silently cancel current fetch if the user wants to fetch more\n              return _awaitIgnored(_this4.cancel(true));\n            } else {\n              // Return current promise if we are already fetching\n              _exit2 = true;\n              return _this4.promise;\n            }\n          }();\n        }\n      }, function (_result2) {\n        if (_exit2) return _result2;\n\n        // Update config if passed, otherwise the config from the last execution is used\n        if (config) {\n          _this4.updateConfig(config);\n        }\n\n        config = _this4.config; // Get the query function params\n\n        var filter = config.queryFnParamsFilter;\n        var params = filter ? filter(_this4.queryKey) : _this4.queryKey;\n        _this4.promise = _async(function () {\n          return _catch(function () {\n            var data;\n            return _invoke(function () {\n              if (config.infinite) {\n                return _await(_this4.startInfiniteFetch(config, params, options), function (_this4$startInfiniteF) {\n                  data = _this4$startInfiniteF;\n                });\n              } else {\n                return _await(_this4.startFetch(config, params, options), function (_this4$startFetch) {\n                  data = _this4$startFetch;\n                });\n              }\n            }, function () {\n              // Set success state\n              _this4.setData(data); // Cleanup\n\n\n              delete _this4.promise; // Return data\n\n              return data;\n            });\n          }, function (error) {\n            // Set error state if needed\n            if (!(isCancelledError(error) && error.silent)) {\n              _this4.dispatch({\n                type: ActionType.Error,\n                error: error\n              });\n            } // Log error\n\n\n            if (!isCancelledError(error)) {\n              Console.error(error);\n            } // Cleanup\n\n\n            delete _this4.promise; // Propagate error\n\n            throw error;\n          });\n        })();\n        return _this4.promise;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.startFetch = function startFetch(config, params, _options) {\n    // Create function to fetch the data\n    var fetchData = function fetchData() {\n      return config.queryFn.apply(config, params);\n    }; // Set to fetching state if not already in it\n\n\n    if (!this.state.isFetching) {\n      this.dispatch({\n        type: ActionType.Fetch\n      });\n    } // Try to fetch the data\n\n\n    return this.tryFetchData(config, fetchData);\n  };\n\n  _proto.startInfiniteFetch = function startInfiniteFetch(config, params, options) {\n    var fetchMore = options == null ? void 0 : options.fetchMore;\n\n    var _ref = fetchMore || {},\n        previous = _ref.previous,\n        fetchMoreVariable = _ref.fetchMoreVariable;\n\n    var isFetchingMore = fetchMore ? previous ? 'previous' : 'next' : false;\n    var prevPages = this.state.data || []; // Create function to fetch a page\n\n    var fetchPage = _async(function (pages, prepend, cursor) {\n      var lastPage = getLastPage(pages, prepend);\n\n      if (typeof cursor === 'undefined' && typeof lastPage !== 'undefined' && config.getFetchMore) {\n        cursor = config.getFetchMore(lastPage, pages);\n      }\n\n      return _await(config.queryFn.apply(config, params.concat([cursor])), function (page) {\n        return prepend ? [page].concat(pages) : [].concat(pages, [page]);\n      });\n    }); // Create function to fetch the data\n\n\n    var fetchData = function fetchData() {\n      if (isFetchingMore) {\n        return fetchPage(prevPages, previous, fetchMoreVariable);\n      } else if (!prevPages.length) {\n        return fetchPage([]);\n      } else {\n        var promise = fetchPage([]);\n\n        for (var i = 1; i < prevPages.length; i++) {\n          promise = promise.then(fetchPage);\n        }\n\n        return promise;\n      }\n    }; // Set to fetching state if not already in it\n\n\n    if (!this.state.isFetching || this.state.isFetchingMore !== isFetchingMore) {\n      this.dispatch({\n        type: ActionType.Fetch,\n        isFetchingMore: isFetchingMore\n      });\n    } // Try to get the data\n\n\n    return this.tryFetchData(config, fetchData);\n  };\n\n  _proto.tryFetchData = function tryFetchData(config, fn) {\n    var _this5 = this;\n\n    return new Promise(function (outerResolve, outerReject) {\n      var resolved = false;\n      var continueLoop;\n      var cancelTransport;\n\n      var done = function done() {\n        resolved = true;\n        delete _this5.cancelFetch;\n        delete _this5.continueFetch;\n        delete _this5.isTransportCancelable; // End loop if currently paused\n\n        continueLoop == null ? void 0 : continueLoop();\n      };\n\n      var resolve = function resolve(value) {\n        done();\n        outerResolve(value);\n      };\n\n      var reject = function reject(value) {\n        done();\n        outerReject(value);\n      }; // Create callback to cancel this fetch\n\n\n      _this5.cancelFetch = function (silent) {\n        reject(new CancelledError(silent));\n        cancelTransport == null ? void 0 : cancelTransport();\n      }; // Create callback to continue this fetch\n\n\n      _this5.continueFetch = function () {\n        continueLoop == null ? void 0 : continueLoop();\n      }; // Create loop function\n\n\n      var run = _async(function () {\n        return _catch(function () {\n          // Execute query\n          var promiseOrValue = fn(); // Check if the transport layer support cancellation\n\n          if (isCancelable(promiseOrValue)) {\n            cancelTransport = function cancelTransport() {\n              try {\n                promiseOrValue.cancel();\n              } catch (_unused) {}\n            };\n\n            _this5.isTransportCancelable = true;\n          } // Await data\n\n\n          return _await(promiseOrValue, function (_promiseOrValue) {\n            resolve(_promiseOrValue);\n          });\n        }, function (error) {\n          // Stop if the fetch is already resolved\n          if (resolved) {\n            return;\n          } // Do we need to retry the request?\n\n\n          var failureCount = _this5.state.failureCount;\n          var retry = config.retry,\n              retryDelay = config.retryDelay;\n          var shouldRetry = retry === true || failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n          if (!shouldRetry) {\n            // We are done if the query does not need to be retried\n            reject(error);\n            return;\n          } // Increase the failureCount\n\n\n          _this5.dispatch({\n            type: ActionType.Failed\n          }); // Delay\n\n\n          return _await(sleep(functionalUpdate(retryDelay, failureCount) || 0), function () {\n            // Pause retry if the document is not visible or when the device is offline\n            return _invoke(function () {\n              if (!isDocumentVisible() || !isOnline()) {\n                return _awaitIgnored(new Promise(function (continueResolve) {\n                  continueLoop = continueResolve;\n                }));\n              }\n            }, function () {\n              if (!resolved) {\n                run();\n              }\n            }); // Try again if not resolved yet\n          });\n        });\n      }); // Start loop\n\n\n      run();\n    });\n  };\n\n  return Query;\n}();\n\nfunction getLastPage(pages, previous) {\n  return previous ? pages[0] : pages[pages.length - 1];\n}\n\nfunction hasMorePages(config, pages, previous) {\n  if (config.infinite && config.getFetchMore && Array.isArray(pages)) {\n    return Boolean(config.getFetchMore(getLastPage(pages, previous), pages));\n  }\n}\n\nfunction getDefaultState(config) {\n  var data = typeof config.initialData === 'function' ? config.initialData() : config.initialData;\n  var status = typeof data !== 'undefined' ? QueryStatus.Success : config.enabled ? QueryStatus.Loading : QueryStatus.Idle;\n  return {\n    canFetchMore: hasMorePages(config, data),\n    data: data,\n    error: null,\n    failureCount: 0,\n    isFetching: status === QueryStatus.Loading,\n    isFetchingMore: false,\n    isInitialData: true,\n    isInvalidated: false,\n    status: status,\n    updateCount: 0,\n    updatedAt: Date.now()\n  };\n}\n\nexport function queryReducer(state, action) {\n  var _action$updatedAt;\n\n  switch (action.type) {\n    case ActionType.Failed:\n      return _extends({}, state, {\n        failureCount: state.failureCount + 1\n      });\n\n    case ActionType.Fetch:\n      return _extends({}, state, {\n        failureCount: 0,\n        isFetching: true,\n        isFetchingMore: action.isFetchingMore || false,\n        status: typeof state.data !== 'undefined' ? QueryStatus.Success : QueryStatus.Loading\n      });\n\n    case ActionType.Success:\n      return _extends({}, state, {\n        canFetchMore: action.canFetchMore,\n        data: action.data,\n        error: null,\n        failureCount: 0,\n        isFetching: false,\n        isFetchingMore: false,\n        isInitialData: false,\n        isInvalidated: false,\n        status: QueryStatus.Success,\n        updateCount: state.updateCount + 1,\n        updatedAt: (_action$updatedAt = action.updatedAt) != null ? _action$updatedAt : Date.now()\n      });\n\n    case ActionType.Error:\n      return _extends({}, state, {\n        error: action.error,\n        failureCount: state.failureCount + 1,\n        isFetching: false,\n        isFetchingMore: false,\n        status: QueryStatus.Error,\n        throwInErrorBoundary: true,\n        updateCount: state.updateCount + 1\n      });\n\n    case ActionType.Invalidate:\n      return _extends({}, state, {\n        isInvalidated: true\n      });\n\n    default:\n      return state;\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { deepIncludes, getQueryArgs, isDocumentVisible, isOnline, isPlainObject, isServer, noop } from './utils';\nimport { getResolvedQueryConfig as _getResolvedQueryConfig } from './config';\nimport { Query } from './query';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver'; // TYPES\n\n// CLASS\nexport var QueryCache = /*#__PURE__*/function () {\n  function QueryCache(config) {\n    this.config = config || {};\n    this.globalListeners = [];\n    this.queries = {};\n    this.queriesArray = [];\n    this.isFetching = 0;\n  }\n\n  var _proto = QueryCache.prototype;\n\n  _proto.notifyGlobalListeners = function notifyGlobalListeners(query) {\n    var _this = this;\n\n    this.isFetching = this.getQueries().reduce(function (acc, q) {\n      return q.state.isFetching ? acc + 1 : acc;\n    }, 0);\n    notifyManager.batch(function () {\n      _this.globalListeners.forEach(function (listener) {\n        notifyManager.schedule(function () {\n          listener(_this, query);\n        });\n      });\n    });\n  };\n\n  _proto.getDefaultConfig = function getDefaultConfig() {\n    return this.config.defaultConfig;\n  };\n\n  _proto.getResolvedQueryConfig = function getResolvedQueryConfig(queryKey, config) {\n    return _getResolvedQueryConfig(this, queryKey, undefined, config);\n  };\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this2 = this;\n\n    this.globalListeners.push(listener);\n    return function () {\n      _this2.globalListeners = _this2.globalListeners.filter(function (x) {\n        return x !== listener;\n      });\n    };\n  };\n\n  _proto.clear = function clear(options) {\n    this.removeQueries();\n\n    if (options == null ? void 0 : options.notify) {\n      this.notifyGlobalListeners();\n    }\n  };\n\n  _proto.getQueries = function getQueries(predicate, options) {\n    var anyKey = predicate === true || typeof predicate === 'undefined';\n\n    if (anyKey && !options) {\n      return this.queriesArray;\n    }\n\n    var predicateFn;\n\n    if (typeof predicate === 'function') {\n      predicateFn = predicate;\n    } else {\n      var _ref = options || {},\n          exact = _ref.exact,\n          active = _ref.active,\n          stale = _ref.stale;\n\n      var resolvedConfig = this.getResolvedQueryConfig(predicate);\n\n      predicateFn = function predicateFn(query) {\n        // Check query key if needed\n        if (!anyKey) {\n          if (exact) {\n            // Check if the query key matches exactly\n            if (query.queryHash !== resolvedConfig.queryHash) {\n              return false;\n            }\n          } else {\n            // Check if the query key matches partially\n            if (!deepIncludes(query.queryKey, resolvedConfig.queryKey)) {\n              return false;\n            }\n          }\n        } // Check active state if needed\n\n\n        if (typeof active === 'boolean' && query.isActive() !== active) {\n          return false;\n        } // Check stale state if needed\n\n\n        if (typeof stale === 'boolean' && query.isStale() !== stale) {\n          return false;\n        }\n\n        return true;\n      };\n    }\n\n    return this.queriesArray.filter(predicateFn);\n  };\n\n  _proto.getQuery = function getQuery(predicate) {\n    return this.getQueries(predicate, {\n      exact: true\n    })[0];\n  };\n\n  _proto.getQueryByHash = function getQueryByHash(queryHash) {\n    return this.queries[queryHash];\n  };\n\n  _proto.getQueryData = function getQueryData(predicate) {\n    var _this$getQuery;\n\n    return (_this$getQuery = this.getQuery(predicate)) == null ? void 0 : _this$getQuery.state.data;\n  };\n\n  _proto.removeQuery = function removeQuery(query) {\n    if (this.queries[query.queryHash]) {\n      query.destroy();\n      delete this.queries[query.queryHash];\n      this.queriesArray = this.queriesArray.filter(function (x) {\n        return x !== query;\n      });\n      this.notifyGlobalListeners(query);\n    }\n  };\n\n  _proto.removeQueries = function removeQueries(predicate, options) {\n    var _this3 = this;\n\n    this.getQueries(predicate, options).forEach(function (query) {\n      _this3.removeQuery(query);\n    });\n  };\n\n  _proto.cancelQueries = function cancelQueries(predicate, options) {\n    this.getQueries(predicate, options).forEach(function (query) {\n      query.cancel();\n    });\n  }\n  /**\n   * @return Promise resolving to an array with the invalidated queries.\n   */\n  ;\n\n  _proto.invalidateQueries = function invalidateQueries(predicate, options) {\n    var queries = this.getQueries(predicate, options);\n    notifyManager.batch(function () {\n      queries.forEach(function (query) {\n        query.invalidate();\n      });\n    });\n\n    var _ref2 = options || {},\n        _ref2$refetchActive = _ref2.refetchActive,\n        refetchActive = _ref2$refetchActive === void 0 ? true : _ref2$refetchActive,\n        _ref2$refetchInactive = _ref2.refetchInactive,\n        refetchInactive = _ref2$refetchInactive === void 0 ? false : _ref2$refetchInactive;\n\n    if (!refetchInactive && !refetchActive) {\n      return Promise.resolve(queries);\n    }\n\n    var refetchOptions = _extends({}, options);\n\n    if (refetchActive && !refetchInactive) {\n      refetchOptions.active = true;\n    } else if (refetchInactive && !refetchActive) {\n      refetchOptions.active = false;\n    }\n\n    var promise = this.refetchQueries(predicate, refetchOptions);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(function () {\n        return queries;\n      });\n    }\n\n    return promise.then(function () {\n      return queries;\n    });\n  }\n  /**\n   * @return Promise resolving to an array with the refetched queries.\n   */\n  ;\n\n  _proto.refetchQueries = function refetchQueries(predicate, options) {\n    var _this4 = this;\n\n    var promises = [];\n    notifyManager.batch(function () {\n      _this4.getQueries(predicate, options).forEach(function (query) {\n        var promise = query.fetch().then(function () {\n          return query;\n        });\n\n        if (!(options == null ? void 0 : options.throwOnError)) {\n          promise = promise.catch(function () {\n            return query;\n          });\n        }\n\n        promises.push(promise);\n      });\n    });\n    return Promise.all(promises);\n  };\n\n  _proto.resetErrorBoundaries = function resetErrorBoundaries() {\n    this.getQueries().forEach(function (query) {\n      query.state.throwInErrorBoundary = false;\n    });\n  };\n\n  _proto.buildQuery = function buildQuery(queryKey, config) {\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, config);\n    var query = this.getQueryByHash(resolvedConfig.queryHash);\n\n    if (!query) {\n      query = this.createQuery(resolvedConfig);\n    }\n\n    return query;\n  };\n\n  _proto.createQuery = function createQuery(config) {\n    var query = new Query(config); // A frozen cache does not add new queries to the cache\n\n    if (!this.config.frozen) {\n      this.queries[query.queryHash] = query;\n      this.queriesArray.push(query);\n      this.notifyGlobalListeners(query);\n    }\n\n    return query;\n  } // Parameter syntax\n  ;\n\n  // Implementation\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\n    var _getQueryArgs = getQueryArgs(arg1, arg2, arg3),\n        queryKey = _getQueryArgs[0],\n        config = _getQueryArgs[1];\n\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, _extends({\n      // https://github.com/tannerlinsley/react-query/issues/652\n      retry: false\n    }, config));\n    var query = this.getQueryByHash(resolvedConfig.queryHash);\n\n    if (!query) {\n      query = this.createQuery(resolvedConfig);\n    }\n\n    if (!query.isStaleByTime(config.staleTime)) {\n      return Promise.resolve(query.state.data);\n    }\n\n    return query.fetch(undefined, resolvedConfig);\n  } // Parameter syntax with optional prefetch options\n  ;\n\n  // Implementation\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3, arg4) {\n    if (isPlainObject(arg2) && (arg2.hasOwnProperty('throwOnError') || arg2.hasOwnProperty('force'))) {\n      arg4 = arg2;\n      arg2 = undefined;\n      arg3 = undefined;\n    }\n\n    var _getQueryArgs2 = getQueryArgs(arg1, arg2, arg3, arg4),\n        queryKey = _getQueryArgs2[0],\n        config = _getQueryArgs2[1],\n        options = _getQueryArgs2[2];\n\n    if (options == null ? void 0 : options.force) {\n      config.staleTime = 0;\n    }\n\n    var promise = this.fetchQuery(queryKey, config);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  } // Parameter syntax\n  ;\n\n  // Implementation\n  _proto.watchQuery = function watchQuery(arg1, arg2, arg3) {\n    var _getQueryArgs3 = getQueryArgs(arg1, arg2, arg3),\n        queryKey = _getQueryArgs3[0],\n        config = _getQueryArgs3[1];\n\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, config);\n    return new QueryObserver(resolvedConfig);\n  };\n\n  _proto.setQueryData = function setQueryData(queryKey, updater, config) {\n    this.buildQuery(queryKey, config).setData(updater);\n  };\n\n  return QueryCache;\n}();\nvar defaultQueryCache = new QueryCache({\n  frozen: isServer\n});\nexport { defaultQueryCache as queryCache };\nexport var queryCaches = [defaultQueryCache];\n/**\n * @deprecated\n */\n\nexport function makeQueryCache(config) {\n  return new QueryCache(config);\n}\nexport function onVisibilityOrOnlineChange(type) {\n  if (isDocumentVisible() && isOnline()) {\n    notifyManager.batch(function () {\n      queryCaches.forEach(function (queryCache) {\n        queryCache.getQueries().forEach(function (query) {\n          query.onInteraction(type);\n        });\n      });\n    });\n  }\n}","import { createSetHandler, isServer } from './utils';\nimport { onVisibilityOrOnlineChange } from './queryCache';\nexport var setFocusHandler = createSetHandler(function () {\n  return onVisibilityOrOnlineChange('focus');\n});\nsetFocusHandler(function (handleFocus) {\n  var _window;\n\n  if (isServer || !((_window = window) == null ? void 0 : _window.addEventListener)) {\n    return;\n  } // Listen to visibillitychange and focus\n\n\n  window.addEventListener('visibilitychange', handleFocus, false);\n  window.addEventListener('focus', handleFocus, false);\n  return function () {\n    // Be sure to unsubscribe if a new handler is set\n    window.removeEventListener('visibilitychange', handleFocus);\n    window.removeEventListener('focus', handleFocus);\n  };\n});","import { createSetHandler, isServer } from './utils';\nimport { onVisibilityOrOnlineChange } from './queryCache';\nexport var setOnlineHandler = createSetHandler(function () {\n  return onVisibilityOrOnlineChange('online');\n});\nsetOnlineHandler(function (handleOnline) {\n  var _window;\n\n  if (isServer || !((_window = window) == null ? void 0 : _window.addEventListener)) {\n    return;\n  } // Listen to online\n\n\n  window.addEventListener('online', handleOnline, false);\n  return function () {\n    // Be sure to unsubscribe if a new handler is set\n    window.removeEventListener('online', handleOnline);\n  };\n});","import ReactDOM from 'react-dom';\nexport var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;","import React from 'react';\nimport { QueryCache, queryCache as defaultQueryCache, queryCaches } from '../core';\nvar queryCacheContext = /*#__PURE__*/React.createContext(defaultQueryCache);\nexport var useQueryCache = function useQueryCache() {\n  return React.useContext(queryCacheContext);\n};\nexport var ReactQueryCacheProvider = function ReactQueryCacheProvider(_ref) {\n  var queryCache = _ref.queryCache,\n      children = _ref.children;\n  var resolvedQueryCache = React.useMemo(function () {\n    return queryCache || new QueryCache();\n  }, [queryCache]);\n  React.useEffect(function () {\n    queryCaches.push(resolvedQueryCache);\n    return function () {\n      // remove the cache from the active list\n      var i = queryCaches.indexOf(resolvedQueryCache);\n\n      if (i > -1) {\n        queryCaches.splice(i, 1);\n      } // if the resolvedQueryCache was created by us, we need to tear it down\n\n\n      if (queryCache == null) {\n        resolvedQueryCache.clear({\n          notify: false\n        });\n      }\n    };\n  }, [resolvedQueryCache, queryCache]);\n  return /*#__PURE__*/React.createElement(queryCacheContext.Provider, {\n    value: resolvedQueryCache\n  }, children);\n};","import React from 'react';\nimport { mergeReactQueryConfigs } from '../core/config';\nvar configContext = /*#__PURE__*/React.createContext(undefined);\nexport function useContextConfig() {\n  return React.useContext(configContext);\n}\nexport var ReactQueryConfigProvider = function ReactQueryConfigProvider(_ref) {\n  var config = _ref.config,\n      children = _ref.children;\n  var parentConfig = useContextConfig();\n  var mergedConfig = React.useMemo(function () {\n    return parentConfig ? mergeReactQueryConfigs(parentConfig, config) : config;\n  }, [config, parentConfig]);\n  return /*#__PURE__*/React.createElement(configContext.Provider, {\n    value: mergedConfig\n  }, children);\n};","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar context = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useErrorResetBoundary = function useErrorResetBoundary() {\n  return React.useContext(context);\n}; // COMPONENT\n\nexport var ReactQueryErrorResetBoundary = function ReactQueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { isServer } from '../core/utils';\nexport function useIsMounted() {\n  var mountedRef = React.useRef(false);\n  var isMounted = React.useCallback(function () {\n    return mountedRef.current;\n  }, []);\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return isMounted;\n}\nexport function useMountedCallback(callback) {\n  var isMounted = useIsMounted();\n  return React.useCallback(function () {\n    if (isMounted()) {\n      return callback.apply(void 0, arguments);\n    }\n  }, [callback, isMounted]);\n}","import { getQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // TYPES\n\n// Implementation\nexport function useQuery(arg1, arg2, arg3) {\n  var _getQueryArgs = getQueryArgs(arg1, arg2, arg3),\n      queryKey = _getQueryArgs[0],\n      config = _getQueryArgs[1];\n\n  return useBaseQuery(queryKey, config);\n}","import React from 'react';\nimport { useIsMounted } from './utils';\nimport { getResolvedQueryConfig } from '../core/config';\nimport { QueryObserver } from '../core/queryObserver';\nimport { useErrorResetBoundary } from './ReactQueryErrorResetBoundary';\nimport { useQueryCache } from './ReactQueryCacheProvider';\nimport { useContextConfig } from './ReactQueryConfigProvider';\nexport function useBaseQuery(queryKey, config) {\n  var _React$useReducer = React.useReducer(function (c) {\n    return c + 1;\n  }, 0),\n      rerender = _React$useReducer[1];\n\n  var isMounted = useIsMounted();\n  var cache = useQueryCache();\n  var contextConfig = useContextConfig();\n  var errorResetBoundary = useErrorResetBoundary(); // Get resolved config\n\n  var resolvedConfig = getResolvedQueryConfig(cache, queryKey, contextConfig, config); // Create query observer\n\n  var observerRef = React.useRef();\n  var firstRender = !observerRef.current;\n  var observer = observerRef.current || new QueryObserver(resolvedConfig);\n  observerRef.current = observer; // Subscribe to the observer\n\n  React.useEffect(function () {\n    errorResetBoundary.clearReset();\n    return observer.subscribe(function () {\n      if (isMounted()) {\n        rerender();\n      }\n    });\n  }, [isMounted, observer, rerender, errorResetBoundary]); // Update config\n\n  if (!firstRender) {\n    observer.updateConfig(resolvedConfig);\n  }\n\n  var result = observer.getCurrentResult(); // Handle suspense\n\n  if (resolvedConfig.suspense || resolvedConfig.useErrorBoundary) {\n    var query = observer.getCurrentQuery();\n\n    if (result.isError && !errorResetBoundary.isReset() && query.state.throwInErrorBoundary) {\n      throw result.error;\n    }\n\n    if (resolvedConfig.enabled && resolvedConfig.suspense && !result.isSuccess) {\n      errorResetBoundary.clearReset();\n      var unsubscribe = observer.subscribe();\n      throw observer.fetch().finally(unsubscribe);\n    }\n  }\n\n  return result;\n}","import { setBatchedUpdates } from './core/index';\nimport { unstable_batchedUpdates } from './react/reactBatchedUpdates';\nsetBatchedUpdates(unstable_batchedUpdates);\nexport * from './core/index';\nexport * from './react/index';"],"names":["QueryStatus","CancelledError","silent","this","isServer","window","noop","Console","console","error","warn","log","functionalUpdate","updater","input","stableStringifyReplacer","_key","value","Error","isPlainObject","Object","keys","sort","reduce","result","key","deepIncludes","a","b","some","isValidTimeout","Infinity","isDocumentVisible","document","undefined","includes","visibilityState","isOnline","navigator","onLine","getQueryArgs","arg1","arg2","arg3","arg4","queryKey","queryFn","config","options","_extends","replaceEqualDeep","array","Array","isArray","aSize","length","bItems","bSize","copy","equalItems","i","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","toString","call","isCancelledError","createSetHandler","fn","removePreviousHandler","callback","scheduleMicrotask","Promise","resolve","then","catch","setTimeout","batchedUpdates","getBatchedUpdates","DEFAULT_CONFIG","queries","cacheTime","enabled","notifyOnStatusChange","reject","queryKeySerializerFn","arrayQueryKey","queryHash","JSON","stringify","parse","_unused","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","retry","retryDelay","attemptIndex","Math","min","pow","staleTime","structuralSharing","getResolvedQueryConfig","queryCache","contextConfig","queryCacheConfig","getDefaultConfig","resolvedConfig","shared","notifyManager","NotifyManager","queue","transactions","_proto","batch","flush","schedule","notify","push","forEach","QueryObserver","isStale","initialUpdateCount","remove","bind","refetch","fetchMore","unsubscribe","updateQuery","subscribe","listener","currentQuery","subscribeObserver","forceFetchOnMount","fetch","optionalFetch","updateTimers","clearTimers","unsubscribeObserver","updateConfig","prevConfig","prevQuery","Boolean","isResolvedQueryConfig","updateStaleTimeout","refetchInterval","updateRefetchInterval","getCurrentQuery","getCurrentResult","currentResult","clear","fetchMoreVariable","_DEFAULT_CONFIG$queri","data","suspense","isFetched","observers","_this","clearStaleTimeout","timeElapsed","Date","now","updatedAt","timeUntilStale","timeout","max","staleTimeoutId","updateResult","globalListeners","_this2","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","clearInterval","_this$previousQueryRe","state","status","isPreviousData","keepPreviousData","isInitialData","previousQueryResult","isSuccess","isLoading","Loading","Success","isError","isIdle","Idle","getStatusProps","canFetchMore","failureCount","updateCount","isFetchedAfterMount","isFetching","isFetchingMore","query","getQueryByHash","createQuery","initialStale","isStaleByTime","onQueryUpdate","action","type","prevResult","notifyOptions","onSuccess","onError","onSettled","notifyGlobalListeners","_empty","ActionType","Failed","Fetch","Invalidate","_awaitIgnored","direct","_invoke","body","_await","_catch","recover","e","_async","f","args","arguments","apply","Query","initialData","hasMorePages","isInvalidated","getDefaultState","scheduleGc","dispatch","_action$updatedAt","throwInErrorBoundary","queryReducer","observer","clearGcTimeout","gcTimeout","cancel","promise","cancelFetch","continue","_this$continueFetch","continueFetch","clearTimersObservers","clearTimeout","setData","_this$config$isDataEq","_this$config","prevData","isDataEqual","removeQuery","destroy","isActive","onInteraction","staleObserver","find","filter","x","isTransportCancelable","invalidate","throwOnError","previous","_exit2","_this4","_result2","queryFnParamsFilter","params","infinite","startInfiniteFetch","_this4$startInfiniteF","startFetch","_this4$startFetch","_options","tryFetchData","_ref","prevPages","fetchPage","pages","prepend","cursor","lastPage","getLastPage","getFetchMore","concat","page","_this5","outerResolve","outerReject","continueLoop","cancelTransport","resolved","done","run","promiseOrValue","_promiseOrValue","continueResolve","QueryCache","queriesArray","getQueries","acc","q","defaultConfig","_getResolvedQueryConfig","removeQueries","predicate","predicateFn","anyKey","exact","active","stale","getQuery","getQueryData","_this$getQuery","_this3","cancelQueries","invalidateQueries","_ref2","_ref2$refetchActive","refetchActive","_ref2$refetchInactive","refetchInactive","refetchOptions","refetchQueries","promises","all","resetErrorBoundaries","buildQuery","frozen","fetchQuery","_getQueryArgs","prefetchQuery","_getQueryArgs2","force","watchQuery","_getQueryArgs3","setQueryData","defaultQueryCache","queryCaches","onVisibilityOrOnlineChange","setFocusHandler","handleFocus","_window","addEventListener","removeEventListener","setOnlineHandler","handleOnline","unstable_batchedUpdates","ReactDOM","queryCacheContext","React","useQueryCache","configContext","useContextConfig","createValue","_isReset","clearReset","reset","isReset","context","useErrorResetBoundary","useIsMounted","mountedRef","isMounted","current","useQuery","rerender","c","cache","errorResetBoundary","observerRef","firstRender","useErrorBoundary","finally","useBaseQuery"],"sourceRoot":""}