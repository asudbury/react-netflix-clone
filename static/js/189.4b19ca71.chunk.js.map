{"version":3,"file":"static/js/189.4b19ca71.chunk.js","mappings":"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","sources":["components/Converter.js","components/Hero.js","components/Tile.js","components/TileListSkeleton.js","components/TileList.js","pages/HomePage.js"],"sourcesContent":["class Converter {\n\tstatic convertMoviesToTiles = (movies) => {\n\t\treturn movies.map(m => {\n\t\t\treturn {id: m.id, title: m.original_title, desc: m.tagline, banner: m.backdrop_path, type: 'movie'}\n\t\t})\n\t}\n\n\tstatic convertShowsToTiles = (movies) => {\n\t\treturn movies.map(m => {\n\t\t\treturn {id: m.id, title: m.name, desc: m.overview, banner: m.backdrop_path, type: 'tv'}\n\t\t})\n\t}\n\n\tstatic convertToTile = (type, watchable) => {\n\t\treturn {id: watchable.id, title: type === 'tv' ? watchable.name : watchable.original_title, desc: type === 'tv' ? watchable.overview : watchable.tagline, banner: watchable.backdrop_path, type: type, overview: watchable.overview}\n\t}\n}\n\nexport default Converter\n","import React from \"react\";\nimport \"./Hero.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Hero({ data, isLoading, list }) {\n  return (\n    <div\n      className={`hero ${isLoading ? \"hero--loading\" : \"\"}`}\n      style={\n        isLoading\n          ? {}\n          : {\n              backgroundImage: `url(https://image.tmdb.org/t/p/original${data.banner})`,\n            }\n      }\n    >\n      <div className=\"hero__info\">\n        <h2 className=\"hero__title\">{data ? data.title : \"\"}</h2>\n        <p className=\"hero__desc\">{data ? data.desc : \"\"}</p>\n        <div className=\"btns\">\n          <Link\n            to={`/playing/${data ? data.type : \"\"}/${data ? data.id : \"\"}`}\n            className=\"btn btn--play\"\n          >\n            <img\n              className=\"btn__icon btn__icon--play\"\n              src={require(\"../images/streamline-icon-controls-play@15x15.png\")}\n              alt=\"\"\n            />\n            Play\n          </Link>\n          <button className=\"btn btn--moreinfo\">\n            <span className=\"btn__icon btn__icon--info\">â“˜</span>\n            More info\n          </button>\n        </div>\n      </div>\n      <div className=\"hero__list\">{list}</div>\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\nimport \"./Tile.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Tile({ data }) {\n  return (\n    <Link\n      to={`/playing/${data ? data.type : \"\"}/${data ? data.id : \"\"}`}\n      className=\"tile\"\n      style={\n        data\n          ? {\n              backgroundImage: `url(https://image.tmdb.org/t/p/w500${data.banner})`,\n            }\n          : {}\n      }\n    >\n      <div className=\"tile__cont\">\n        <h3 className=\"tile__title\">{data ? data.title : \"\"}</h3>\n        <button className=\"tile__play\">\n          <img\n            className=\"tile__icon\"\n            src={require(\"../images/streamline-icon-controls-play@15x15.png\")}\n            alt=\"\"\n          />\n        </button>\n      </div>\n    </Link>\n  );\n}\n\nexport default Tile;\n","import React from 'react'\nimport './TileListSkeleton.css'\n\nfunction TileListSkeleton() {\n    return (\n        <div className=\"tlistske\">\n        \t<div className=\"tlistske__tile\"></div>\n        \t<div className=\"tlistske__tile\"></div>\n        \t<div className=\"tlistske__tile\"></div>\n        \t<div className=\"tlistske__tile\"></div>\n        \t<div className=\"tlistske__tile\"></div>\n        </div>\n    )\n}\n\nexport default TileListSkeleton\n","import React from 'react'\nimport './TileList.css'\nimport Tile from './Tile.js'\nimport TileListSkeleton from './TileListSkeleton.js'\n\nfunction TileList({data, title, isLoading}) {\n\n\tif (isLoading) return <TileListSkeleton/>\n\n    return (\n    \t<div className=\"tlist\">\n    \t\t<h2 className=\"tlist__title\">{title}</h2>\n\t        <div className=\"tlist__cont\">\n\t        \t{data && data.map(t => <Tile data={t} key={t.id}/>)}\n\t        </div>\n    \t</div>\n    )\n}\n\nexport default TileList\n","import React, { Suspense } from \"react\";\nimport { useQuery } from \"react-query\";\nimport \"./HomePage.css\";\nimport Hero from \"../components/Hero.js\";\nimport TileList from \"../components/TileList.js\";\nimport feedbackState from \"../atoms/feedbackState.js\";\nimport { useSetRecoilState } from \"recoil\";\nimport Converter from \"../components/Converter.js\";\nconst BigTile = React.lazy(() => import(\"../components/BigTile.js\"));\n\nfunction HomePage() {\n  const setFeedback = useSetRecoilState(feedbackState);\n  const {\n    data: heroData,\n    isLoading: heroIsLoading,\n    error: heroError,\n  } = useQuery(\"hero\", async () => {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/movie/558?api_key=bd7686376aa170d6af7fce5aee732f55`\n    );\n    const data = await res.json();\n    return Converter.convertToTile(\"movie\", data);\n  });\n  const {\n    data: popularData,\n    isLoading: popularIsLoading,\n    error: popularError,\n  } = useQuery(\"popular\", async () => {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=bd7686376aa170d6af7fce5aee732f55`\n    );\n    const data = await res.json();\n    return Converter.convertMoviesToTiles(data.results.splice(0, 5));\n  });\n  const {\n    data: trendingMoviesData,\n    isLoading: trendingMoviesIsLoading,\n    error: trendingMoviesError,\n  } = useQuery(\"trending\", async () => {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=bd7686376aa170d6af7fce5aee732f55`\n    );\n    const data = await res.json();\n    return Converter.convertMoviesToTiles(data.results.splice(0, 5));\n  });\n  const {\n    data: topRatedData,\n    isLoading: topRatedIsLoading,\n    error: topRatedError,\n  } = useQuery(\"tr\", async () => {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=bd7686376aa170d6af7fce5aee732f55`\n    );\n    const data = await res.json();\n    return Converter.convertMoviesToTiles(data.results.splice(0, 5));\n  });\n  const {\n    data: bigData,\n    isLoading: bigIsLoading,\n    error: bigError,\n  } = useQuery(\"big\", async () => {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/movie/550?api_key=bd7686376aa170d6af7fce5aee732f55`\n    );\n    const data = await res.json();\n    return Converter.convertToTile(\"movie\", data);\n  });\n  const {\n    data: nowData,\n    isLoading: nowIsLoading,\n    error: nowError,\n  } = useQuery(\"now\", async () => {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=bd7686376aa170d6af7fce5aee732f55`\n    );\n    const data = await res.json();\n    return Converter.convertMoviesToTiles(data.results.splice(0, 5));\n  });\n\n  if (\n    heroError ||\n    popularError ||\n    trendingMoviesError ||\n    topRatedError ||\n    bigError ||\n    nowError\n  ) {\n    setFeedback({ isVisible: true, message: \"Oops, something went wrong\" });\n  }\n\n  const mostPopular = (\n    <TileList\n      title=\"Most popular\"\n      data={popularData}\n      isLoading={popularIsLoading}\n    />\n  );\n\n  return (\n    <div className=\"home\">\n      <Hero data={heroData} isLoading={heroIsLoading} list={mostPopular} />\n      <div className=\"tlist__wrapper\" fallback={<div></div>}>\n        <TileList\n          title=\"Trending now\"\n          data={trendingMoviesData}\n          isLoading={trendingMoviesIsLoading}\n        />\n      </div>\n      <div className=\"tlist__wrapper tlist__wrapper--grey\">\n        <TileList\n          title=\"Top rated\"\n          data={topRatedData}\n          isLoading={topRatedIsLoading}\n        />\n      </div>\n      <Suspense fallback={<div></div>}>\n        <BigTile data={bigData} isLoading={bigIsLoading} />\n      </Suspense>\n      <div className=\"tlist__wrapper tlist__wrapper--tall\">\n        <TileList\n          title=\"New releases\"\n          data={nowData}\n          isLoading={nowIsLoading}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n"],"names":["Converter","_createClass","_classCallCheck","convertMoviesToTiles","movies","map","m","id","title","original_title","desc","tagline","banner","backdrop_path","type","convertShowsToTiles","name","overview","convertToTile","watchable","_ref","data","isLoading","list","React","className","concat","style","backgroundImage","Link","to","src","require","alt","TileListSkeleton","t","Tile","key","BigTile","setFeedback","useSetRecoilState","feedbackState","_useQuery","useQuery","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","heroData","heroIsLoading","heroError","error","_useQuery2","_callee2","_context2","results","splice","popularData","popularIsLoading","popularError","_useQuery3","_callee3","_context3","trendingMoviesData","trendingMoviesIsLoading","trendingMoviesError","_useQuery4","_callee4","_context4","topRatedData","topRatedIsLoading","topRatedError","_useQuery5","_callee5","_context5","bigData","bigIsLoading","bigError","_useQuery6","_callee6","_context6","nowData","nowIsLoading","nowError","isVisible","message","mostPopular","TileList","Hero","fallback","Suspense"],"sourceRoot":""}